
NODE2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ec  00800200  00000f28  00000fbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  008002ec  008002ec  000010a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010a8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00001104  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001511  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000978  00000000  00000000  00002815  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e2d  00000000  00000000  0000318d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000051c  00000000  00000000  00003fbc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000548  00000000  00000000  000044d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c36  00000000  00000000  00004a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  00005656  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	98 c0       	rjmp	.+304    	; 0x146 <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e2       	ldi	r30, 0x28	; 40
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 3e       	cpi	r26, 0xEC	; 236
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ac ee       	ldi	r26, 0xEC	; 236
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 30       	cpi	r26, 0x04	; 4
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	8e d1       	rcall	.+796    	; 0x43c <main>
 120:	01 c7       	rjmp	.+3586   	; 0xf24 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_construct_message>:
void CAN_print(CAN_message_t message){
	printf("\nID %i\tL: %i\tDATA:\n",message.id,message.length);
	for(uint8_t i = 0; i < message.length; i++){
		printf("%i\t",message.data[i]);
	}
}
 124:	90 93 ee 02 	sts	0x02EE, r25
 128:	80 93 ed 02 	sts	0x02ED, r24
 12c:	60 93 ef 02 	sts	0x02EF, r22
 130:	66 23       	and	r22, r22
 132:	41 f0       	breq	.+16     	; 0x144 <CAN_construct_message+0x20>
 134:	80 ef       	ldi	r24, 0xF0	; 240
 136:	92 e0       	ldi	r25, 0x02	; 2
 138:	fc 01       	movw	r30, r24
 13a:	11 92       	st	Z+, r1
 13c:	2e 2f       	mov	r18, r30
 13e:	28 1b       	sub	r18, r24
 140:	26 17       	cp	r18, r22
 142:	d8 f3       	brcs	.-10     	; 0x13a <CAN_construct_message+0x16>
 144:	08 95       	ret

00000146 <__vector_5>:
#if NODE == 1
ISR(INT2_vect){//interrupt incoming message
	receive_flag = 1;
}
#elif NODE == 2
ISR(INT4_vect){//interrupt incoming message
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	8f 93       	push	r24
	receive_flag = 1;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	80 93 ec 02 	sts	0x02EC, r24
}
 158:	8f 91       	pop	r24
 15a:	0f 90       	pop	r0
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	0f 90       	pop	r0
 160:	1f 90       	pop	r1
 162:	18 95       	reti

00000164 <CAN_interrupt_setup>:
#endif

	
void CAN_interrupt_setup(void){
	cli();
 164:	f8 94       	cli
		
		//General Interrupt Control Register port int2 defined as on?
		GICR |= (1<<INT2);
	#elif NODE == 2
		// Use PE4 as external interrupt pin
		DDRE &= ~(1<<PINE4);
 166:	6c 98       	cbi	0x0d, 4	; 13
	
		// Trigger interrupt on r edge (Compare sec 15.2.2 of Atmega2560 data sheet).
		EICRB &= ~(1<<ISC40);	//x0
 168:	ea e6       	ldi	r30, 0x6A	; 106
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	80 83       	st	Z, r24
		EICRB |= (1<<ISC41);	//1x
 172:	80 81       	ld	r24, Z
 174:	82 60       	ori	r24, 0x02	; 2
 176:	80 83       	st	Z, r24
	
		// Enable INT4 (Compare sec 15.2.3 of Atmega2560 data sheet).
		EIMSK |= (1<<INT4);
 178:	ec 9a       	sbi	0x1d, 4	; 29

		//Enable global interrupt.
		
	
	#endif
	sei();
 17a:	78 94       	sei
 17c:	08 95       	ret

0000017e <CAN_initialize>:
static CAN_message_t CAN_send_buffer;
uint8_t receive_flag = 0;

void CAN_initialize(void){

	MCP2515_initialize();
 17e:	54 d0       	rcall	.+168    	; 0x228 <MCP2515_initialize>

	// Initialize empty message for transmission
	CAN_construct_message(CAN_ID,CAN_MESSAGE_LENGTH);
 180:	68 e0       	ldi	r22, 0x08	; 8
 182:	88 e2       	ldi	r24, 0x28	; 40
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	ce df       	rcall	.-100    	; 0x124 <CAN_construct_message>
	
	// Turn mask/filters off; receive any message AND Enable Rollover
	MCP2515_bit_modify(MCP_RXB0CTRL,0b01100100,0xFF);
 188:	4f ef       	ldi	r20, 0xFF	; 255
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	64 e6       	ldi	r22, 0x64	; 100
 18e:	80 e6       	ldi	r24, 0x60	; 96
 190:	2f d0       	rcall	.+94     	; 0x1f0 <MCP2515_bit_modify>
	MCP2515_bit_modify(MCP_RXB1CTRL,0b01100100,0xFF);
 192:	4f ef       	ldi	r20, 0xFF	; 255
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	64 e6       	ldi	r22, 0x64	; 100
 198:	80 e7       	ldi	r24, 0x70	; 112
 19a:	2a d0       	rcall	.+84     	; 0x1f0 <MCP2515_bit_modify>
	
	// RX0IE Receive Buffer 0 FUll Interrupt Enable bit
	MCP2515_bit_modify(MCP_CANINTE,0x01,1);
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	50 e0       	ldi	r21, 0x00	; 0
 1a0:	61 e0       	ldi	r22, 0x01	; 1
 1a2:	8b e2       	ldi	r24, 0x2B	; 43
 1a4:	25 d0       	rcall	.+74     	; 0x1f0 <MCP2515_bit_modify>
	
	//set CAN mode
	MCP2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL); 
 1a6:	40 e0       	ldi	r20, 0x00	; 0
 1a8:	50 e0       	ldi	r21, 0x00	; 0
 1aa:	60 ee       	ldi	r22, 0xE0	; 224
 1ac:	8f e0       	ldi	r24, 0x0F	; 15
 1ae:	20 d0       	rcall	.+64     	; 0x1f0 <MCP2515_bit_modify>
	
	// Set up interrupts.
	CAN_interrupt_setup();
 1b0:	d9 df       	rcall	.-78     	; 0x164 <CAN_interrupt_setup>
	
	#if UART_ENABLE
		printf("MCP_CANSTAT: %i\n", MCP2515_read(MCP_CANSTAT));//comment out later
 1b2:	8e e0       	ldi	r24, 0x0E	; 14
 1b4:	0f d0       	rcall	.+30     	; 0x1d4 <MCP2515_read>
 1b6:	9f 93       	push	r25
 1b8:	8f 93       	push	r24
 1ba:	8e e1       	ldi	r24, 0x1E	; 30
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	9f 93       	push	r25
 1c0:	8f 93       	push	r24
 1c2:	96 d2       	rcall	.+1324   	; 0x6f0 <printf>
		printf("CAN initialized.\n\n");
 1c4:	8f e2       	ldi	r24, 0x2F	; 47
 1c6:	92 e0       	ldi	r25, 0x02	; 2
 1c8:	a4 d2       	rcall	.+1352   	; 0x712 <puts>
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	08 95       	ret

000001d4 <MCP2515_read>:
	SPI_select();
	SPI_send(MCP_READ_STATUS);
	uint8_t recieved_status = SPI_receive();
	SPI_deselect();
	return recieved_status;
}
 1d4:	cf 93       	push	r28
 1d6:	c8 2f       	mov	r28, r24
 1d8:	36 d0       	rcall	.+108    	; 0x246 <SPI_select>
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	28 d0       	rcall	.+80     	; 0x22e <SPI_send>
 1de:	8c 2f       	mov	r24, r28
 1e0:	26 d0       	rcall	.+76     	; 0x22e <SPI_send>
 1e2:	2a d0       	rcall	.+84     	; 0x238 <SPI_receive>
 1e4:	c8 2f       	mov	r28, r24
 1e6:	31 d0       	rcall	.+98     	; 0x24a <SPI_deselect>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <MCP2515_bit_modify>:

void MCP2515_bit_modify(uint8_t adr, uint8_t mask, int data){
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	18 2f       	mov	r17, r24
 1f8:	d6 2f       	mov	r29, r22
 1fa:	c4 2f       	mov	r28, r20
	SPI_select();
 1fc:	24 d0       	rcall	.+72     	; 0x246 <SPI_select>
	SPI_send(MCP_BITMOD);
 1fe:	85 e0       	ldi	r24, 0x05	; 5
 200:	16 d0       	rcall	.+44     	; 0x22e <SPI_send>
	SPI_send(adr);
 202:	81 2f       	mov	r24, r17
 204:	14 d0       	rcall	.+40     	; 0x22e <SPI_send>
	SPI_send(mask);
 206:	8d 2f       	mov	r24, r29
 208:	12 d0       	rcall	.+36     	; 0x22e <SPI_send>
	SPI_send(data);
 20a:	8c 2f       	mov	r24, r28
 20c:	10 d0       	rcall	.+32     	; 0x22e <SPI_send>
	SPI_deselect();
 20e:	1d d0       	rcall	.+58     	; 0x24a <SPI_deselect>
}
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	08 95       	ret

00000218 <MCP2515_reset>:


void MCP2515_reset(void){
	#if UART_ENABLE
		printf("Resetting MCP2515\n");
 218:	84 e9       	ldi	r24, 0x94	; 148
 21a:	92 e0       	ldi	r25, 0x02	; 2
 21c:	7a d2       	rcall	.+1268   	; 0x712 <puts>
	#endif
	SPI_select();
 21e:	13 d0       	rcall	.+38     	; 0x246 <SPI_select>
	SPI_send(MCP_RESET);
 220:	80 ec       	ldi	r24, 0xC0	; 192
 222:	05 d0       	rcall	.+10     	; 0x22e <SPI_send>
	SPI_deselect();
 224:	12 c0       	rjmp	.+36     	; 0x24a <SPI_deselect>
 226:	08 95       	ret

00000228 <MCP2515_initialize>:

#include "MCP2515_driver.h"
#include "SPI.h"

void MCP2515_initialize(void){
	SPI_initialize();
 228:	12 d0       	rcall	.+36     	; 0x24e <SPI_initialize>
	MCP2515_reset();
 22a:	f6 cf       	rjmp	.-20     	; 0x218 <MCP2515_reset>
 22c:	08 95       	ret

0000022e <SPI_send>:


void SPI_send(uint8_t data) {
	
	// Start the transmission
	SPDR = data;
 22e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission complete (checks if the register is empty)
	while(!(SPSR & (1<<SPIF)));
 230:	0d b4       	in	r0, 0x2d	; 45
 232:	07 fe       	sbrs	r0, 7
 234:	fd cf       	rjmp	.-6      	; 0x230 <SPI_send+0x2>

}
 236:	08 95       	ret

00000238 <SPI_receive>:


uint8_t SPI_receive(void){
	
	// Send dummy data to receive from slave
	SPI_send(0);
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	f9 df       	rcall	.-14     	; 0x22e <SPI_send>
	
	// Wait for reception complete
	while(!(SPSR & (1<<SPIF)));
 23c:	0d b4       	in	r0, 0x2d	; 45
 23e:	07 fe       	sbrs	r0, 7
 240:	fd cf       	rjmp	.-6      	; 0x23c <SPI_receive+0x4>

	// Return Data Register
	return SPDR;
 242:	8e b5       	in	r24, 0x2e	; 46
}
 244:	08 95       	ret

00000246 <SPI_select>:

void SPI_select(void){
	PORTB &= ~(1 << SPI_SS);
 246:	2f 98       	cbi	0x05, 7	; 5
 248:	08 95       	ret

0000024a <SPI_deselect>:
}

void SPI_deselect(void){
	PORTB |= (1 << SPI_SS);
 24a:	2f 9a       	sbi	0x05, 7	; 5
 24c:	08 95       	ret

0000024e <SPI_initialize>:
void SPI_initialize(void){
	//IF DO SOMETHING! 
	#if NODE == 1
		DDRB &= ~(1 << SPI_MISO);
	#elif NODE == 2
		DDRB |= (1<<PB0);
 24e:	20 9a       	sbi	0x04, 0	; 4
		SPCR |= (1<<SPR0);
 250:	8c b5       	in	r24, 0x2c	; 44
 252:	81 60       	ori	r24, 0x01	; 1
 254:	8c bd       	out	0x2c, r24	; 44
	#endif
	
	/* Set MOSI and SCK output, all others input */
	DDRB |= (1<<SPI_MOSI)|(1<<SPI_SCK)|(1<<SPI_SS); //PB0 is not connected, but has to be set to output in order for SPI-comm to work
 256:	84 b1       	in	r24, 0x04	; 4
 258:	86 68       	ori	r24, 0x86	; 134
 25a:	84 b9       	out	0x04, r24	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR);
 25c:	8c b5       	in	r24, 0x2c	; 44
 25e:	80 65       	ori	r24, 0x50	; 80
 260:	8c bd       	out	0x2c, r24	; 44
		
	SPI_deselect();
 262:	f3 df       	rcall	.-26     	; 0x24a <SPI_deselect>
	#if UART_ENABLE
		printf("SPI communication initialized.\n");
 264:	86 ea       	ldi	r24, 0xA6	; 166
 266:	92 e0       	ldi	r25, 0x02	; 2
 268:	54 c2       	rjmp	.+1192   	; 0x712 <puts>
 26a:	08 95       	ret

0000026c <send_UART>:

#include "uart.h"

void send_UART(char letter){
	//send UART melding
	while( !(UCSR0A & (1<<UDRE0)) );				/* UCSR0A = USART 0 Control and Status Register A, UDRE0 = UCSR0A bit definitions (5), wait for data to be transmitted (checks if the register is empty) */
 26c:	e0 ec       	ldi	r30, 0xC0	; 192
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	90 81       	ld	r25, Z
 272:	95 ff       	sbrs	r25, 5
 274:	fd cf       	rjmp	.-6      	; 0x270 <send_UART+0x4>
	UDR0 = letter;									/* UDR0 = USART 0 Data Register */
 276:	80 93 c6 00 	sts	0x00C6, r24
 27a:	08 95       	ret

0000027c <recieve_UART>:



unsigned int recieve_UART(void){
	
	while (!(UCSR0A & (1 << RXC0)));				/* UCSR0A = USART 0 Control and Status Register A, RXC0 = UCSR0A bit definition (7) , waiting for data to be transmitted (checks if the register is empty) */
 27c:	e0 ec       	ldi	r30, 0xC0	; 192
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	88 23       	and	r24, r24
 284:	ec f7       	brge	.-6      	; 0x280 <recieve_UART+0x4>

	return UDR0;									/* UDR0 = USART 0 Data Register */
 286:	80 91 c6 00 	lds	r24, 0x00C6
}
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	08 95       	ret

0000028e <init_UART>:


void init_UART(){
	
	/* Set baud rate */
	UBRR0H = (unsigned char)(UBRR>>8);
 28e:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char)UBRR;
 292:	87 e6       	ldi	r24, 0x67	; 103
 294:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 298:	88 e1       	ldi	r24, 0x18	; 24
 29a:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	if(NODE == 2){
		UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 29e:	8e e0       	ldi	r24, 0x0E	; 14
 2a0:	80 93 c2 00 	sts	0x00C2, r24
	}

	
	fdevopen((int(*)(char, struct __file*))&send_UART, (int(*)(struct __file*))&recieve_UART);			//overrides printf("string");
 2a4:	6e e3       	ldi	r22, 0x3E	; 62
 2a6:	71 e0       	ldi	r23, 0x01	; 1
 2a8:	86 e3       	ldi	r24, 0x36	; 54
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	d7 c1       	rjmp	.+942    	; 0x65c <fdevopen>
 2ae:	08 95       	ret

000002b0 <buzzer_set_freq>:
 2b0:	9b 01       	movw	r18, r22
 2b2:	ac 01       	movw	r20, r24
 2b4:	e1 e0       	ldi	r30, 0x01	; 1
 2b6:	f1 e0       	ldi	r31, 0x01	; 1
 2b8:	80 81       	ld	r24, Z
 2ba:	88 60       	ori	r24, 0x08	; 8
 2bc:	80 83       	st	Z, r24
 2be:	60 e0       	ldi	r22, 0x00	; 0
 2c0:	74 e2       	ldi	r23, 0x24	; 36
 2c2:	84 e7       	ldi	r24, 0x74	; 116
 2c4:	96 e4       	ldi	r25, 0x46	; 70
 2c6:	c2 d0       	rcall	.+388    	; 0x44c <__divsf3>
 2c8:	29 d1       	rcall	.+594    	; 0x51c <__fixsfsi>
 2ca:	70 93 a7 00 	sts	0x00A7, r23
 2ce:	60 93 a6 00 	sts	0x00A6, r22
 2d2:	10 92 a9 00 	sts	0x00A9, r1
 2d6:	10 92 a8 00 	sts	0x00A8, r1
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	80 93 f8 02 	sts	0x02F8, r24
 2e0:	08 95       	ret

000002e2 <buzzer_init>:
 2e2:	e1 e0       	ldi	r30, 0x01	; 1
 2e4:	f1 e0       	ldi	r31, 0x01	; 1
 2e6:	80 81       	ld	r24, Z
 2e8:	88 60       	ori	r24, 0x08	; 8
 2ea:	80 83       	st	Z, r24
 2ec:	e0 ea       	ldi	r30, 0xA0	; 160
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	8e 7f       	andi	r24, 0xFE	; 254
 2f4:	80 83       	st	Z, r24
 2f6:	80 81       	ld	r24, Z
 2f8:	82 60       	ori	r24, 0x02	; 2
 2fa:	80 83       	st	Z, r24
 2fc:	a1 ea       	ldi	r26, 0xA1	; 161
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	8c 91       	ld	r24, X
 302:	88 61       	ori	r24, 0x18	; 24
 304:	8c 93       	st	X, r24
 306:	80 81       	ld	r24, Z
 308:	80 68       	ori	r24, 0x80	; 128
 30a:	80 83       	st	Z, r24
 30c:	80 81       	ld	r24, Z
 30e:	8f 7b       	andi	r24, 0xBF	; 191
 310:	80 83       	st	Z, r24
 312:	8c 91       	ld	r24, X
 314:	85 60       	ori	r24, 0x05	; 5
 316:	8c 93       	st	X, r24
 318:	8c 91       	ld	r24, X
 31a:	8d 7f       	andi	r24, 0xFD	; 253
 31c:	8c 93       	st	X, r24
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	90 93 a9 00 	sts	0x00A9, r25
 326:	80 93 a8 00 	sts	0x00A8, r24
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	80 93 f8 02 	sts	0x02F8, r24
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	80 e8       	ldi	r24, 0x80	; 128
 336:	90 e4       	ldi	r25, 0x40	; 64
 338:	bb cf       	rjmp	.-138    	; 0x2b0 <buzzer_set_freq>
 33a:	08 95       	ret

0000033c <buzzer_of>:
 33c:	e1 e0       	ldi	r30, 0x01	; 1
 33e:	f1 e0       	ldi	r31, 0x01	; 1
 340:	80 81       	ld	r24, Z
 342:	87 7f       	andi	r24, 0xF7	; 247
 344:	80 83       	st	Z, r24
 346:	10 92 f8 02 	sts	0x02F8, r1
 34a:	08 95       	ret

0000034c <SD_send>:
	// Wait for reception complete
	while(!(SPSR & (1<<SPIF)));

	// Return Data Register
	return SPDR;
}
 34c:	df 92       	push	r13
 34e:	ef 92       	push	r14
 350:	ff 92       	push	r15
 352:	0f 93       	push	r16
 354:	1f 93       	push	r17
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	d2 2e       	mov	r13, r18
 35c:	e3 2e       	mov	r14, r19
 35e:	f4 2e       	mov	r15, r20
 360:	15 2f       	mov	r17, r21
 362:	d6 2f       	mov	r29, r22
 364:	c7 2f       	mov	r28, r23
 366:	b8 2f       	mov	r27, r24
 368:	a9 2f       	mov	r26, r25
 36a:	e8 e2       	ldi	r30, 0x28	; 40
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	2d 2d       	mov	r18, r13
 370:	3e 2d       	mov	r19, r14
 372:	4f 2d       	mov	r20, r15
 374:	51 2f       	mov	r21, r17
 376:	6d 2f       	mov	r22, r29
 378:	7c 2f       	mov	r23, r28
 37a:	8b 2f       	mov	r24, r27
 37c:	9a 2f       	mov	r25, r26
 37e:	0e 2f       	mov	r16, r30
 380:	51 d1       	rcall	.+674    	; 0x624 <__lshrdi3>
 382:	2e bd       	out	0x2e, r18	; 46
 384:	38 97       	sbiw	r30, 0x08	; 8
 386:	e8 3f       	cpi	r30, 0xF8	; 248
 388:	8f ef       	ldi	r24, 0xFF	; 255
 38a:	f8 07       	cpc	r31, r24
 38c:	81 f7       	brne	.-32     	; 0x36e <SD_send+0x22>
 38e:	0d b4       	in	r0, 0x2d	; 45
 390:	07 fe       	sbrs	r0, 7
 392:	fd cf       	rjmp	.-6      	; 0x38e <SD_send+0x42>
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	1f 91       	pop	r17
 39a:	0f 91       	pop	r16
 39c:	ff 90       	pop	r15
 39e:	ef 90       	pop	r14
 3a0:	df 90       	pop	r13
 3a2:	08 95       	ret

000003a4 <SD_select>:

void SD_select(void){
	PORTB &= ~(1 << SD_SS);
 3a4:	28 98       	cbi	0x05, 0	; 5
 3a6:	08 95       	ret

000003a8 <SD_initialize>:
#include	"SD_card.h"
#define CMD0	0x400000000095 //INIT
#define CMD55	0x770000000065 
void SD_initialize(void){
	 
	DDRL |= (1<<PL0);
 3a8:	ea e0       	ldi	r30, 0x0A	; 10
 3aa:	f1 e0       	ldi	r31, 0x01	; 1
 3ac:	80 81       	ld	r24, Z
 3ae:	81 60       	ori	r24, 0x01	; 1
 3b0:	80 83       	st	Z, r24
	SPCR |= (1<<SPR0);
 3b2:	8c b5       	in	r24, 0x2c	; 44
 3b4:	81 60       	ori	r24, 0x01	; 1
 3b6:	8c bd       	out	0x2c, r24	; 44
	
	/* Set MOSI and SCK output, all others input */
	DDRB |= (1<<SD_MOSI)|(1<<SD_SCK);
 3b8:	84 b1       	in	r24, 0x04	; 4
 3ba:	86 60       	ori	r24, 0x06	; 6
 3bc:	84 b9       	out	0x04, r24	; 4
	DDRL |= (1<<SD_SS);
 3be:	80 81       	ld	r24, Z
 3c0:	81 60       	ori	r24, 0x01	; 1
 3c2:	80 83       	st	Z, r24
	DDRB &= ~(1<<SD_MISO);
 3c4:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR);
 3c6:	8c b5       	in	r24, 0x2c	; 44
 3c8:	80 65       	ori	r24, 0x50	; 80
 3ca:	8c bd       	out	0x2c, r24	; 44
		
	
	//ENABLE SD CARD
	PORTB |= (1<<PB0);
 3cc:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= (1<<SD_MOSI);
 3ce:	2a 9a       	sbi	0x05, 2	; 5
	SD_select();
 3d0:	e9 df       	rcall	.-46     	; 0x3a4 <SD_select>
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	9f ef       	ldi	r25, 0xFF	; 255
 3d6:	01 97       	sbiw	r24, 0x01	; 1
	
	
	for (int a = 0; a < 0xFFFF; a++)
 3d8:	00 97       	sbiw	r24, 0x00	; 0
 3da:	e9 f7       	brne	.-6      	; 0x3d6 <SD_initialize+0x2e>
	{
		
	}
	
	SD_send(CMD0);
 3dc:	25 e9       	ldi	r18, 0x95	; 149
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	40 e0       	ldi	r20, 0x00	; 0
 3e2:	50 e0       	ldi	r21, 0x00	; 0
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	70 e4       	ldi	r23, 0x40	; 64
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	af df       	rcall	.-162    	; 0x34c <SD_send>
	
	while(!(SPSR & (1<<SPIF)));
 3ee:	0d b4       	in	r0, 0x2d	; 45
 3f0:	07 fe       	sbrs	r0, 7
 3f2:	fd cf       	rjmp	.-6      	; 0x3ee <SD_initialize+0x46>
	printf("\nA %i",SPDR);
 3f4:	8e b5       	in	r24, 0x2e	; 46
 3f6:	1f 92       	push	r1
 3f8:	8f 93       	push	r24
 3fa:	85 ec       	ldi	r24, 0xC5	; 197
 3fc:	92 e0       	ldi	r25, 0x02	; 2
 3fe:	9f 93       	push	r25
 400:	8f 93       	push	r24
 402:	76 d1       	rcall	.+748    	; 0x6f0 <printf>
	
	while(!(SPSR & (1<<SPIF)));
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	0f 90       	pop	r0
 40a:	0f 90       	pop	r0
 40c:	0d b4       	in	r0, 0x2d	; 45
 40e:	07 fe       	sbrs	r0, 7
 410:	fd cf       	rjmp	.-6      	; 0x40c <SD_initialize+0x64>
	printf("\nB %i",SPDR);
 412:	8e b5       	in	r24, 0x2e	; 46
 414:	1f 92       	push	r1
 416:	8f 93       	push	r24
 418:	8b ec       	ldi	r24, 0xCB	; 203
 41a:	92 e0       	ldi	r25, 0x02	; 2
 41c:	9f 93       	push	r25
 41e:	8f 93       	push	r24
 420:	67 d1       	rcall	.+718    	; 0x6f0 <printf>
 422:	0f 90       	pop	r0
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	08 95       	ret

0000042c <init_all>:
    return 0;
}

void init_all(void){
	
	cli();
 42c:	f8 94       	cli
	
	CAN_initialize();
 42e:	a7 de       	rcall	.-690    	; 0x17e <CAN_initialize>
	
	
	#if UART_ENABLE
		init_UART();
 430:	2e df       	rcall	.-420    	; 0x28e <init_UART>
		printf("Program initialized\n");
 432:	81 ed       	ldi	r24, 0xD1	; 209
 434:	92 e0       	ldi	r25, 0x02	; 2
 436:	6d d1       	rcall	.+730    	; 0x712 <puts>
	#endif
	sei();
 438:	78 94       	sei
 43a:	08 95       	ret

0000043c <main>:
#include	"SD_card.h"

void init_all(void);

int main(void){
	init_all();
 43c:	f7 df       	rcall	.-18     	; 0x42c <init_all>
	
	printf("Hallo\n");
 43e:	85 ee       	ldi	r24, 0xE5	; 229
 440:	92 e0       	ldi	r25, 0x02	; 2
 442:	67 d1       	rcall	.+718    	; 0x712 <puts>
	//servo_init();
	buzzer_init();
 444:	4e df       	rcall	.-356    	; 0x2e2 <buzzer_init>
	//buzzer_set_freq(10000);
	//_delay_ms(300);
	buzzer_of();
 446:	7a df       	rcall	.-268    	; 0x33c <buzzer_of>
	
	
	
	
	//SD_CARD
	SD_initialize();
 448:	af df       	rcall	.-162    	; 0x3a8 <SD_initialize>
 44a:	ff cf       	rjmp	.-2      	; 0x44a <main+0xe>

0000044c <__divsf3>:
 44c:	0c d0       	rcall	.+24     	; 0x466 <__divsf3x>
 44e:	ae c0       	rjmp	.+348    	; 0x5ac <__fp_round>
 450:	a6 d0       	rcall	.+332    	; 0x59e <__fp_pscB>
 452:	40 f0       	brcs	.+16     	; 0x464 <__divsf3+0x18>
 454:	9d d0       	rcall	.+314    	; 0x590 <__fp_pscA>
 456:	30 f0       	brcs	.+12     	; 0x464 <__divsf3+0x18>
 458:	21 f4       	brne	.+8      	; 0x462 <__divsf3+0x16>
 45a:	5f 3f       	cpi	r21, 0xFF	; 255
 45c:	19 f0       	breq	.+6      	; 0x464 <__divsf3+0x18>
 45e:	8f c0       	rjmp	.+286    	; 0x57e <__fp_inf>
 460:	51 11       	cpse	r21, r1
 462:	d8 c0       	rjmp	.+432    	; 0x614 <__fp_szero>
 464:	92 c0       	rjmp	.+292    	; 0x58a <__fp_nan>

00000466 <__divsf3x>:
 466:	b3 d0       	rcall	.+358    	; 0x5ce <__fp_split3>
 468:	98 f3       	brcs	.-26     	; 0x450 <__divsf3+0x4>

0000046a <__divsf3_pse>:
 46a:	99 23       	and	r25, r25
 46c:	c9 f3       	breq	.-14     	; 0x460 <__divsf3+0x14>
 46e:	55 23       	and	r21, r21
 470:	b1 f3       	breq	.-20     	; 0x45e <__divsf3+0x12>
 472:	95 1b       	sub	r25, r21
 474:	55 0b       	sbc	r21, r21
 476:	bb 27       	eor	r27, r27
 478:	aa 27       	eor	r26, r26
 47a:	62 17       	cp	r22, r18
 47c:	73 07       	cpc	r23, r19
 47e:	84 07       	cpc	r24, r20
 480:	38 f0       	brcs	.+14     	; 0x490 <__divsf3_pse+0x26>
 482:	9f 5f       	subi	r25, 0xFF	; 255
 484:	5f 4f       	sbci	r21, 0xFF	; 255
 486:	22 0f       	add	r18, r18
 488:	33 1f       	adc	r19, r19
 48a:	44 1f       	adc	r20, r20
 48c:	aa 1f       	adc	r26, r26
 48e:	a9 f3       	breq	.-22     	; 0x47a <__divsf3_pse+0x10>
 490:	33 d0       	rcall	.+102    	; 0x4f8 <__divsf3_pse+0x8e>
 492:	0e 2e       	mov	r0, r30
 494:	3a f0       	brmi	.+14     	; 0x4a4 <__divsf3_pse+0x3a>
 496:	e0 e8       	ldi	r30, 0x80	; 128
 498:	30 d0       	rcall	.+96     	; 0x4fa <__divsf3_pse+0x90>
 49a:	91 50       	subi	r25, 0x01	; 1
 49c:	50 40       	sbci	r21, 0x00	; 0
 49e:	e6 95       	lsr	r30
 4a0:	00 1c       	adc	r0, r0
 4a2:	ca f7       	brpl	.-14     	; 0x496 <__divsf3_pse+0x2c>
 4a4:	29 d0       	rcall	.+82     	; 0x4f8 <__divsf3_pse+0x8e>
 4a6:	fe 2f       	mov	r31, r30
 4a8:	27 d0       	rcall	.+78     	; 0x4f8 <__divsf3_pse+0x8e>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	bb 1f       	adc	r27, r27
 4b2:	26 17       	cp	r18, r22
 4b4:	37 07       	cpc	r19, r23
 4b6:	48 07       	cpc	r20, r24
 4b8:	ab 07       	cpc	r26, r27
 4ba:	b0 e8       	ldi	r27, 0x80	; 128
 4bc:	09 f0       	breq	.+2      	; 0x4c0 <__divsf3_pse+0x56>
 4be:	bb 0b       	sbc	r27, r27
 4c0:	80 2d       	mov	r24, r0
 4c2:	bf 01       	movw	r22, r30
 4c4:	ff 27       	eor	r31, r31
 4c6:	93 58       	subi	r25, 0x83	; 131
 4c8:	5f 4f       	sbci	r21, 0xFF	; 255
 4ca:	2a f0       	brmi	.+10     	; 0x4d6 <__divsf3_pse+0x6c>
 4cc:	9e 3f       	cpi	r25, 0xFE	; 254
 4ce:	51 05       	cpc	r21, r1
 4d0:	68 f0       	brcs	.+26     	; 0x4ec <__divsf3_pse+0x82>
 4d2:	55 c0       	rjmp	.+170    	; 0x57e <__fp_inf>
 4d4:	9f c0       	rjmp	.+318    	; 0x614 <__fp_szero>
 4d6:	5f 3f       	cpi	r21, 0xFF	; 255
 4d8:	ec f3       	brlt	.-6      	; 0x4d4 <__divsf3_pse+0x6a>
 4da:	98 3e       	cpi	r25, 0xE8	; 232
 4dc:	dc f3       	brlt	.-10     	; 0x4d4 <__divsf3_pse+0x6a>
 4de:	86 95       	lsr	r24
 4e0:	77 95       	ror	r23
 4e2:	67 95       	ror	r22
 4e4:	b7 95       	ror	r27
 4e6:	f7 95       	ror	r31
 4e8:	9f 5f       	subi	r25, 0xFF	; 255
 4ea:	c9 f7       	brne	.-14     	; 0x4de <__divsf3_pse+0x74>
 4ec:	88 0f       	add	r24, r24
 4ee:	91 1d       	adc	r25, r1
 4f0:	96 95       	lsr	r25
 4f2:	87 95       	ror	r24
 4f4:	97 f9       	bld	r25, 7
 4f6:	08 95       	ret
 4f8:	e1 e0       	ldi	r30, 0x01	; 1
 4fa:	66 0f       	add	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	88 1f       	adc	r24, r24
 500:	bb 1f       	adc	r27, r27
 502:	62 17       	cp	r22, r18
 504:	73 07       	cpc	r23, r19
 506:	84 07       	cpc	r24, r20
 508:	ba 07       	cpc	r27, r26
 50a:	20 f0       	brcs	.+8      	; 0x514 <__divsf3_pse+0xaa>
 50c:	62 1b       	sub	r22, r18
 50e:	73 0b       	sbc	r23, r19
 510:	84 0b       	sbc	r24, r20
 512:	ba 0b       	sbc	r27, r26
 514:	ee 1f       	adc	r30, r30
 516:	88 f7       	brcc	.-30     	; 0x4fa <__divsf3_pse+0x90>
 518:	e0 95       	com	r30
 51a:	08 95       	ret

0000051c <__fixsfsi>:
 51c:	04 d0       	rcall	.+8      	; 0x526 <__fixunssfsi>
 51e:	68 94       	set
 520:	b1 11       	cpse	r27, r1
 522:	78 c0       	rjmp	.+240    	; 0x614 <__fp_szero>
 524:	08 95       	ret

00000526 <__fixunssfsi>:
 526:	5b d0       	rcall	.+182    	; 0x5de <__fp_splitA>
 528:	88 f0       	brcs	.+34     	; 0x54c <__fixunssfsi+0x26>
 52a:	9f 57       	subi	r25, 0x7F	; 127
 52c:	90 f0       	brcs	.+36     	; 0x552 <__fixunssfsi+0x2c>
 52e:	b9 2f       	mov	r27, r25
 530:	99 27       	eor	r25, r25
 532:	b7 51       	subi	r27, 0x17	; 23
 534:	a0 f0       	brcs	.+40     	; 0x55e <__fixunssfsi+0x38>
 536:	d1 f0       	breq	.+52     	; 0x56c <__fixunssfsi+0x46>
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	1a f0       	brmi	.+6      	; 0x548 <__fixunssfsi+0x22>
 542:	ba 95       	dec	r27
 544:	c9 f7       	brne	.-14     	; 0x538 <__fixunssfsi+0x12>
 546:	12 c0       	rjmp	.+36     	; 0x56c <__fixunssfsi+0x46>
 548:	b1 30       	cpi	r27, 0x01	; 1
 54a:	81 f0       	breq	.+32     	; 0x56c <__fixunssfsi+0x46>
 54c:	62 d0       	rcall	.+196    	; 0x612 <__fp_zero>
 54e:	b1 e0       	ldi	r27, 0x01	; 1
 550:	08 95       	ret
 552:	5f c0       	rjmp	.+190    	; 0x612 <__fp_zero>
 554:	67 2f       	mov	r22, r23
 556:	78 2f       	mov	r23, r24
 558:	88 27       	eor	r24, r24
 55a:	b8 5f       	subi	r27, 0xF8	; 248
 55c:	39 f0       	breq	.+14     	; 0x56c <__fixunssfsi+0x46>
 55e:	b9 3f       	cpi	r27, 0xF9	; 249
 560:	cc f3       	brlt	.-14     	; 0x554 <__fixunssfsi+0x2e>
 562:	86 95       	lsr	r24
 564:	77 95       	ror	r23
 566:	67 95       	ror	r22
 568:	b3 95       	inc	r27
 56a:	d9 f7       	brne	.-10     	; 0x562 <__fixunssfsi+0x3c>
 56c:	3e f4       	brtc	.+14     	; 0x57c <__fixunssfsi+0x56>
 56e:	90 95       	com	r25
 570:	80 95       	com	r24
 572:	70 95       	com	r23
 574:	61 95       	neg	r22
 576:	7f 4f       	sbci	r23, 0xFF	; 255
 578:	8f 4f       	sbci	r24, 0xFF	; 255
 57a:	9f 4f       	sbci	r25, 0xFF	; 255
 57c:	08 95       	ret

0000057e <__fp_inf>:
 57e:	97 f9       	bld	r25, 7
 580:	9f 67       	ori	r25, 0x7F	; 127
 582:	80 e8       	ldi	r24, 0x80	; 128
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	60 e0       	ldi	r22, 0x00	; 0
 588:	08 95       	ret

0000058a <__fp_nan>:
 58a:	9f ef       	ldi	r25, 0xFF	; 255
 58c:	80 ec       	ldi	r24, 0xC0	; 192
 58e:	08 95       	ret

00000590 <__fp_pscA>:
 590:	00 24       	eor	r0, r0
 592:	0a 94       	dec	r0
 594:	16 16       	cp	r1, r22
 596:	17 06       	cpc	r1, r23
 598:	18 06       	cpc	r1, r24
 59a:	09 06       	cpc	r0, r25
 59c:	08 95       	ret

0000059e <__fp_pscB>:
 59e:	00 24       	eor	r0, r0
 5a0:	0a 94       	dec	r0
 5a2:	12 16       	cp	r1, r18
 5a4:	13 06       	cpc	r1, r19
 5a6:	14 06       	cpc	r1, r20
 5a8:	05 06       	cpc	r0, r21
 5aa:	08 95       	ret

000005ac <__fp_round>:
 5ac:	09 2e       	mov	r0, r25
 5ae:	03 94       	inc	r0
 5b0:	00 0c       	add	r0, r0
 5b2:	11 f4       	brne	.+4      	; 0x5b8 <__fp_round+0xc>
 5b4:	88 23       	and	r24, r24
 5b6:	52 f0       	brmi	.+20     	; 0x5cc <__fp_round+0x20>
 5b8:	bb 0f       	add	r27, r27
 5ba:	40 f4       	brcc	.+16     	; 0x5cc <__fp_round+0x20>
 5bc:	bf 2b       	or	r27, r31
 5be:	11 f4       	brne	.+4      	; 0x5c4 <__fp_round+0x18>
 5c0:	60 ff       	sbrs	r22, 0
 5c2:	04 c0       	rjmp	.+8      	; 0x5cc <__fp_round+0x20>
 5c4:	6f 5f       	subi	r22, 0xFF	; 255
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ca:	9f 4f       	sbci	r25, 0xFF	; 255
 5cc:	08 95       	ret

000005ce <__fp_split3>:
 5ce:	57 fd       	sbrc	r21, 7
 5d0:	90 58       	subi	r25, 0x80	; 128
 5d2:	44 0f       	add	r20, r20
 5d4:	55 1f       	adc	r21, r21
 5d6:	59 f0       	breq	.+22     	; 0x5ee <__fp_splitA+0x10>
 5d8:	5f 3f       	cpi	r21, 0xFF	; 255
 5da:	71 f0       	breq	.+28     	; 0x5f8 <__fp_splitA+0x1a>
 5dc:	47 95       	ror	r20

000005de <__fp_splitA>:
 5de:	88 0f       	add	r24, r24
 5e0:	97 fb       	bst	r25, 7
 5e2:	99 1f       	adc	r25, r25
 5e4:	61 f0       	breq	.+24     	; 0x5fe <__fp_splitA+0x20>
 5e6:	9f 3f       	cpi	r25, 0xFF	; 255
 5e8:	79 f0       	breq	.+30     	; 0x608 <__fp_splitA+0x2a>
 5ea:	87 95       	ror	r24
 5ec:	08 95       	ret
 5ee:	12 16       	cp	r1, r18
 5f0:	13 06       	cpc	r1, r19
 5f2:	14 06       	cpc	r1, r20
 5f4:	55 1f       	adc	r21, r21
 5f6:	f2 cf       	rjmp	.-28     	; 0x5dc <__fp_split3+0xe>
 5f8:	46 95       	lsr	r20
 5fa:	f1 df       	rcall	.-30     	; 0x5de <__fp_splitA>
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <__fp_splitA+0x30>
 5fe:	16 16       	cp	r1, r22
 600:	17 06       	cpc	r1, r23
 602:	18 06       	cpc	r1, r24
 604:	99 1f       	adc	r25, r25
 606:	f1 cf       	rjmp	.-30     	; 0x5ea <__fp_splitA+0xc>
 608:	86 95       	lsr	r24
 60a:	71 05       	cpc	r23, r1
 60c:	61 05       	cpc	r22, r1
 60e:	08 94       	sec
 610:	08 95       	ret

00000612 <__fp_zero>:
 612:	e8 94       	clt

00000614 <__fp_szero>:
 614:	bb 27       	eor	r27, r27
 616:	66 27       	eor	r22, r22
 618:	77 27       	eor	r23, r23
 61a:	cb 01       	movw	r24, r22
 61c:	97 f9       	bld	r25, 7
 61e:	08 95       	ret

00000620 <__ashrdi3>:
 620:	97 fb       	bst	r25, 7
 622:	10 f8       	bld	r1, 0

00000624 <__lshrdi3>:
 624:	16 94       	lsr	r1
 626:	00 08       	sbc	r0, r0
 628:	0f 93       	push	r16
 62a:	08 30       	cpi	r16, 0x08	; 8
 62c:	98 f0       	brcs	.+38     	; 0x654 <__lshrdi3+0x30>
 62e:	08 50       	subi	r16, 0x08	; 8
 630:	23 2f       	mov	r18, r19
 632:	34 2f       	mov	r19, r20
 634:	45 2f       	mov	r20, r21
 636:	56 2f       	mov	r21, r22
 638:	67 2f       	mov	r22, r23
 63a:	78 2f       	mov	r23, r24
 63c:	89 2f       	mov	r24, r25
 63e:	90 2d       	mov	r25, r0
 640:	f4 cf       	rjmp	.-24     	; 0x62a <__lshrdi3+0x6>
 642:	05 94       	asr	r0
 644:	97 95       	ror	r25
 646:	87 95       	ror	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	57 95       	ror	r21
 64e:	47 95       	ror	r20
 650:	37 95       	ror	r19
 652:	27 95       	ror	r18
 654:	0a 95       	dec	r16
 656:	aa f7       	brpl	.-22     	; 0x642 <__lshrdi3+0x1e>
 658:	0f 91       	pop	r16
 65a:	08 95       	ret

0000065c <fdevopen>:
 65c:	0f 93       	push	r16
 65e:	1f 93       	push	r17
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	ec 01       	movw	r28, r24
 666:	8b 01       	movw	r16, r22
 668:	00 97       	sbiw	r24, 0x00	; 0
 66a:	31 f4       	brne	.+12     	; 0x678 <fdevopen+0x1c>
 66c:	61 15       	cp	r22, r1
 66e:	71 05       	cpc	r23, r1
 670:	19 f4       	brne	.+6      	; 0x678 <fdevopen+0x1c>
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	37 c0       	rjmp	.+110    	; 0x6e6 <fdevopen+0x8a>
 678:	6e e0       	ldi	r22, 0x0E	; 14
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	63 d2       	rcall	.+1222   	; 0xb48 <calloc>
 682:	fc 01       	movw	r30, r24
 684:	00 97       	sbiw	r24, 0x00	; 0
 686:	a9 f3       	breq	.-22     	; 0x672 <fdevopen+0x16>
 688:	80 e8       	ldi	r24, 0x80	; 128
 68a:	83 83       	std	Z+3, r24	; 0x03
 68c:	01 15       	cp	r16, r1
 68e:	11 05       	cpc	r17, r1
 690:	71 f0       	breq	.+28     	; 0x6ae <fdevopen+0x52>
 692:	13 87       	std	Z+11, r17	; 0x0b
 694:	02 87       	std	Z+10, r16	; 0x0a
 696:	81 e8       	ldi	r24, 0x81	; 129
 698:	83 83       	std	Z+3, r24	; 0x03
 69a:	80 91 fa 02 	lds	r24, 0x02FA
 69e:	90 91 fb 02 	lds	r25, 0x02FB
 6a2:	89 2b       	or	r24, r25
 6a4:	21 f4       	brne	.+8      	; 0x6ae <fdevopen+0x52>
 6a6:	f0 93 fb 02 	sts	0x02FB, r31
 6aa:	e0 93 fa 02 	sts	0x02FA, r30
 6ae:	20 97       	sbiw	r28, 0x00	; 0
 6b0:	c9 f0       	breq	.+50     	; 0x6e4 <fdevopen+0x88>
 6b2:	d1 87       	std	Z+9, r29	; 0x09
 6b4:	c0 87       	std	Z+8, r28	; 0x08
 6b6:	83 81       	ldd	r24, Z+3	; 0x03
 6b8:	82 60       	ori	r24, 0x02	; 2
 6ba:	83 83       	std	Z+3, r24	; 0x03
 6bc:	80 91 fc 02 	lds	r24, 0x02FC
 6c0:	90 91 fd 02 	lds	r25, 0x02FD
 6c4:	89 2b       	or	r24, r25
 6c6:	71 f4       	brne	.+28     	; 0x6e4 <fdevopen+0x88>
 6c8:	f0 93 fd 02 	sts	0x02FD, r31
 6cc:	e0 93 fc 02 	sts	0x02FC, r30
 6d0:	80 91 fe 02 	lds	r24, 0x02FE
 6d4:	90 91 ff 02 	lds	r25, 0x02FF
 6d8:	89 2b       	or	r24, r25
 6da:	21 f4       	brne	.+8      	; 0x6e4 <fdevopen+0x88>
 6dc:	f0 93 ff 02 	sts	0x02FF, r31
 6e0:	e0 93 fe 02 	sts	0x02FE, r30
 6e4:	cf 01       	movw	r24, r30
 6e6:	df 91       	pop	r29
 6e8:	cf 91       	pop	r28
 6ea:	1f 91       	pop	r17
 6ec:	0f 91       	pop	r16
 6ee:	08 95       	ret

000006f0 <printf>:
 6f0:	cf 93       	push	r28
 6f2:	df 93       	push	r29
 6f4:	cd b7       	in	r28, 0x3d	; 61
 6f6:	de b7       	in	r29, 0x3e	; 62
 6f8:	fe 01       	movw	r30, r28
 6fa:	36 96       	adiw	r30, 0x06	; 6
 6fc:	61 91       	ld	r22, Z+
 6fe:	71 91       	ld	r23, Z+
 700:	af 01       	movw	r20, r30
 702:	80 91 fc 02 	lds	r24, 0x02FC
 706:	90 91 fd 02 	lds	r25, 0x02FD
 70a:	30 d0       	rcall	.+96     	; 0x76c <vfprintf>
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	08 95       	ret

00000712 <puts>:
 712:	0f 93       	push	r16
 714:	1f 93       	push	r17
 716:	cf 93       	push	r28
 718:	df 93       	push	r29
 71a:	e0 91 fc 02 	lds	r30, 0x02FC
 71e:	f0 91 fd 02 	lds	r31, 0x02FD
 722:	23 81       	ldd	r18, Z+3	; 0x03
 724:	21 ff       	sbrs	r18, 1
 726:	1b c0       	rjmp	.+54     	; 0x75e <puts+0x4c>
 728:	ec 01       	movw	r28, r24
 72a:	00 e0       	ldi	r16, 0x00	; 0
 72c:	10 e0       	ldi	r17, 0x00	; 0
 72e:	89 91       	ld	r24, Y+
 730:	60 91 fc 02 	lds	r22, 0x02FC
 734:	70 91 fd 02 	lds	r23, 0x02FD
 738:	db 01       	movw	r26, r22
 73a:	18 96       	adiw	r26, 0x08	; 8
 73c:	ed 91       	ld	r30, X+
 73e:	fc 91       	ld	r31, X
 740:	19 97       	sbiw	r26, 0x09	; 9
 742:	88 23       	and	r24, r24
 744:	31 f0       	breq	.+12     	; 0x752 <puts+0x40>
 746:	19 95       	eicall
 748:	89 2b       	or	r24, r25
 74a:	89 f3       	breq	.-30     	; 0x72e <puts+0x1c>
 74c:	0f ef       	ldi	r16, 0xFF	; 255
 74e:	1f ef       	ldi	r17, 0xFF	; 255
 750:	ee cf       	rjmp	.-36     	; 0x72e <puts+0x1c>
 752:	8a e0       	ldi	r24, 0x0A	; 10
 754:	19 95       	eicall
 756:	89 2b       	or	r24, r25
 758:	11 f4       	brne	.+4      	; 0x75e <puts+0x4c>
 75a:	c8 01       	movw	r24, r16
 75c:	02 c0       	rjmp	.+4      	; 0x762 <puts+0x50>
 75e:	8f ef       	ldi	r24, 0xFF	; 255
 760:	9f ef       	ldi	r25, 0xFF	; 255
 762:	df 91       	pop	r29
 764:	cf 91       	pop	r28
 766:	1f 91       	pop	r17
 768:	0f 91       	pop	r16
 76a:	08 95       	ret

0000076c <vfprintf>:
 76c:	2f 92       	push	r2
 76e:	3f 92       	push	r3
 770:	4f 92       	push	r4
 772:	5f 92       	push	r5
 774:	6f 92       	push	r6
 776:	7f 92       	push	r7
 778:	8f 92       	push	r8
 77a:	9f 92       	push	r9
 77c:	af 92       	push	r10
 77e:	bf 92       	push	r11
 780:	cf 92       	push	r12
 782:	df 92       	push	r13
 784:	ef 92       	push	r14
 786:	ff 92       	push	r15
 788:	0f 93       	push	r16
 78a:	1f 93       	push	r17
 78c:	cf 93       	push	r28
 78e:	df 93       	push	r29
 790:	cd b7       	in	r28, 0x3d	; 61
 792:	de b7       	in	r29, 0x3e	; 62
 794:	2c 97       	sbiw	r28, 0x0c	; 12
 796:	0f b6       	in	r0, 0x3f	; 63
 798:	f8 94       	cli
 79a:	de bf       	out	0x3e, r29	; 62
 79c:	0f be       	out	0x3f, r0	; 63
 79e:	cd bf       	out	0x3d, r28	; 61
 7a0:	7c 01       	movw	r14, r24
 7a2:	6b 01       	movw	r12, r22
 7a4:	8a 01       	movw	r16, r20
 7a6:	fc 01       	movw	r30, r24
 7a8:	17 82       	std	Z+7, r1	; 0x07
 7aa:	16 82       	std	Z+6, r1	; 0x06
 7ac:	83 81       	ldd	r24, Z+3	; 0x03
 7ae:	81 ff       	sbrs	r24, 1
 7b0:	b0 c1       	rjmp	.+864    	; 0xb12 <vfprintf+0x3a6>
 7b2:	ce 01       	movw	r24, r28
 7b4:	01 96       	adiw	r24, 0x01	; 1
 7b6:	4c 01       	movw	r8, r24
 7b8:	f7 01       	movw	r30, r14
 7ba:	93 81       	ldd	r25, Z+3	; 0x03
 7bc:	f6 01       	movw	r30, r12
 7be:	93 fd       	sbrc	r25, 3
 7c0:	85 91       	lpm	r24, Z+
 7c2:	93 ff       	sbrs	r25, 3
 7c4:	81 91       	ld	r24, Z+
 7c6:	6f 01       	movw	r12, r30
 7c8:	88 23       	and	r24, r24
 7ca:	09 f4       	brne	.+2      	; 0x7ce <vfprintf+0x62>
 7cc:	9e c1       	rjmp	.+828    	; 0xb0a <vfprintf+0x39e>
 7ce:	85 32       	cpi	r24, 0x25	; 37
 7d0:	39 f4       	brne	.+14     	; 0x7e0 <vfprintf+0x74>
 7d2:	93 fd       	sbrc	r25, 3
 7d4:	85 91       	lpm	r24, Z+
 7d6:	93 ff       	sbrs	r25, 3
 7d8:	81 91       	ld	r24, Z+
 7da:	6f 01       	movw	r12, r30
 7dc:	85 32       	cpi	r24, 0x25	; 37
 7de:	21 f4       	brne	.+8      	; 0x7e8 <vfprintf+0x7c>
 7e0:	b7 01       	movw	r22, r14
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	0f d3       	rcall	.+1566   	; 0xe04 <fputc>
 7e6:	e8 cf       	rjmp	.-48     	; 0x7b8 <vfprintf+0x4c>
 7e8:	51 2c       	mov	r5, r1
 7ea:	31 2c       	mov	r3, r1
 7ec:	20 e0       	ldi	r18, 0x00	; 0
 7ee:	20 32       	cpi	r18, 0x20	; 32
 7f0:	a0 f4       	brcc	.+40     	; 0x81a <vfprintf+0xae>
 7f2:	8b 32       	cpi	r24, 0x2B	; 43
 7f4:	69 f0       	breq	.+26     	; 0x810 <vfprintf+0xa4>
 7f6:	30 f4       	brcc	.+12     	; 0x804 <vfprintf+0x98>
 7f8:	80 32       	cpi	r24, 0x20	; 32
 7fa:	59 f0       	breq	.+22     	; 0x812 <vfprintf+0xa6>
 7fc:	83 32       	cpi	r24, 0x23	; 35
 7fe:	69 f4       	brne	.+26     	; 0x81a <vfprintf+0xae>
 800:	20 61       	ori	r18, 0x10	; 16
 802:	2c c0       	rjmp	.+88     	; 0x85c <vfprintf+0xf0>
 804:	8d 32       	cpi	r24, 0x2D	; 45
 806:	39 f0       	breq	.+14     	; 0x816 <vfprintf+0xaa>
 808:	80 33       	cpi	r24, 0x30	; 48
 80a:	39 f4       	brne	.+14     	; 0x81a <vfprintf+0xae>
 80c:	21 60       	ori	r18, 0x01	; 1
 80e:	26 c0       	rjmp	.+76     	; 0x85c <vfprintf+0xf0>
 810:	22 60       	ori	r18, 0x02	; 2
 812:	24 60       	ori	r18, 0x04	; 4
 814:	23 c0       	rjmp	.+70     	; 0x85c <vfprintf+0xf0>
 816:	28 60       	ori	r18, 0x08	; 8
 818:	21 c0       	rjmp	.+66     	; 0x85c <vfprintf+0xf0>
 81a:	27 fd       	sbrc	r18, 7
 81c:	27 c0       	rjmp	.+78     	; 0x86c <vfprintf+0x100>
 81e:	30 ed       	ldi	r19, 0xD0	; 208
 820:	38 0f       	add	r19, r24
 822:	3a 30       	cpi	r19, 0x0A	; 10
 824:	78 f4       	brcc	.+30     	; 0x844 <vfprintf+0xd8>
 826:	26 ff       	sbrs	r18, 6
 828:	06 c0       	rjmp	.+12     	; 0x836 <vfprintf+0xca>
 82a:	fa e0       	ldi	r31, 0x0A	; 10
 82c:	5f 9e       	mul	r5, r31
 82e:	30 0d       	add	r19, r0
 830:	11 24       	eor	r1, r1
 832:	53 2e       	mov	r5, r19
 834:	13 c0       	rjmp	.+38     	; 0x85c <vfprintf+0xf0>
 836:	8a e0       	ldi	r24, 0x0A	; 10
 838:	38 9e       	mul	r3, r24
 83a:	30 0d       	add	r19, r0
 83c:	11 24       	eor	r1, r1
 83e:	33 2e       	mov	r3, r19
 840:	20 62       	ori	r18, 0x20	; 32
 842:	0c c0       	rjmp	.+24     	; 0x85c <vfprintf+0xf0>
 844:	8e 32       	cpi	r24, 0x2E	; 46
 846:	21 f4       	brne	.+8      	; 0x850 <vfprintf+0xe4>
 848:	26 fd       	sbrc	r18, 6
 84a:	5f c1       	rjmp	.+702    	; 0xb0a <vfprintf+0x39e>
 84c:	20 64       	ori	r18, 0x40	; 64
 84e:	06 c0       	rjmp	.+12     	; 0x85c <vfprintf+0xf0>
 850:	8c 36       	cpi	r24, 0x6C	; 108
 852:	11 f4       	brne	.+4      	; 0x858 <vfprintf+0xec>
 854:	20 68       	ori	r18, 0x80	; 128
 856:	02 c0       	rjmp	.+4      	; 0x85c <vfprintf+0xf0>
 858:	88 36       	cpi	r24, 0x68	; 104
 85a:	41 f4       	brne	.+16     	; 0x86c <vfprintf+0x100>
 85c:	f6 01       	movw	r30, r12
 85e:	93 fd       	sbrc	r25, 3
 860:	85 91       	lpm	r24, Z+
 862:	93 ff       	sbrs	r25, 3
 864:	81 91       	ld	r24, Z+
 866:	6f 01       	movw	r12, r30
 868:	81 11       	cpse	r24, r1
 86a:	c1 cf       	rjmp	.-126    	; 0x7ee <vfprintf+0x82>
 86c:	98 2f       	mov	r25, r24
 86e:	9f 7d       	andi	r25, 0xDF	; 223
 870:	95 54       	subi	r25, 0x45	; 69
 872:	93 30       	cpi	r25, 0x03	; 3
 874:	28 f4       	brcc	.+10     	; 0x880 <vfprintf+0x114>
 876:	0c 5f       	subi	r16, 0xFC	; 252
 878:	1f 4f       	sbci	r17, 0xFF	; 255
 87a:	ff e3       	ldi	r31, 0x3F	; 63
 87c:	f9 83       	std	Y+1, r31	; 0x01
 87e:	0d c0       	rjmp	.+26     	; 0x89a <vfprintf+0x12e>
 880:	83 36       	cpi	r24, 0x63	; 99
 882:	31 f0       	breq	.+12     	; 0x890 <vfprintf+0x124>
 884:	83 37       	cpi	r24, 0x73	; 115
 886:	71 f0       	breq	.+28     	; 0x8a4 <vfprintf+0x138>
 888:	83 35       	cpi	r24, 0x53	; 83
 88a:	09 f0       	breq	.+2      	; 0x88e <vfprintf+0x122>
 88c:	57 c0       	rjmp	.+174    	; 0x93c <vfprintf+0x1d0>
 88e:	21 c0       	rjmp	.+66     	; 0x8d2 <vfprintf+0x166>
 890:	f8 01       	movw	r30, r16
 892:	80 81       	ld	r24, Z
 894:	89 83       	std	Y+1, r24	; 0x01
 896:	0e 5f       	subi	r16, 0xFE	; 254
 898:	1f 4f       	sbci	r17, 0xFF	; 255
 89a:	44 24       	eor	r4, r4
 89c:	43 94       	inc	r4
 89e:	51 2c       	mov	r5, r1
 8a0:	54 01       	movw	r10, r8
 8a2:	14 c0       	rjmp	.+40     	; 0x8cc <vfprintf+0x160>
 8a4:	38 01       	movw	r6, r16
 8a6:	f2 e0       	ldi	r31, 0x02	; 2
 8a8:	6f 0e       	add	r6, r31
 8aa:	71 1c       	adc	r7, r1
 8ac:	f8 01       	movw	r30, r16
 8ae:	a0 80       	ld	r10, Z
 8b0:	b1 80       	ldd	r11, Z+1	; 0x01
 8b2:	26 ff       	sbrs	r18, 6
 8b4:	03 c0       	rjmp	.+6      	; 0x8bc <vfprintf+0x150>
 8b6:	65 2d       	mov	r22, r5
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <vfprintf+0x154>
 8bc:	6f ef       	ldi	r22, 0xFF	; 255
 8be:	7f ef       	ldi	r23, 0xFF	; 255
 8c0:	c5 01       	movw	r24, r10
 8c2:	2c 87       	std	Y+12, r18	; 0x0c
 8c4:	94 d2       	rcall	.+1320   	; 0xdee <strnlen>
 8c6:	2c 01       	movw	r4, r24
 8c8:	83 01       	movw	r16, r6
 8ca:	2c 85       	ldd	r18, Y+12	; 0x0c
 8cc:	2f 77       	andi	r18, 0x7F	; 127
 8ce:	22 2e       	mov	r2, r18
 8d0:	16 c0       	rjmp	.+44     	; 0x8fe <vfprintf+0x192>
 8d2:	38 01       	movw	r6, r16
 8d4:	f2 e0       	ldi	r31, 0x02	; 2
 8d6:	6f 0e       	add	r6, r31
 8d8:	71 1c       	adc	r7, r1
 8da:	f8 01       	movw	r30, r16
 8dc:	a0 80       	ld	r10, Z
 8de:	b1 80       	ldd	r11, Z+1	; 0x01
 8e0:	26 ff       	sbrs	r18, 6
 8e2:	03 c0       	rjmp	.+6      	; 0x8ea <vfprintf+0x17e>
 8e4:	65 2d       	mov	r22, r5
 8e6:	70 e0       	ldi	r23, 0x00	; 0
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <vfprintf+0x182>
 8ea:	6f ef       	ldi	r22, 0xFF	; 255
 8ec:	7f ef       	ldi	r23, 0xFF	; 255
 8ee:	c5 01       	movw	r24, r10
 8f0:	2c 87       	std	Y+12, r18	; 0x0c
 8f2:	6b d2       	rcall	.+1238   	; 0xdca <strnlen_P>
 8f4:	2c 01       	movw	r4, r24
 8f6:	2c 85       	ldd	r18, Y+12	; 0x0c
 8f8:	20 68       	ori	r18, 0x80	; 128
 8fa:	22 2e       	mov	r2, r18
 8fc:	83 01       	movw	r16, r6
 8fe:	23 fc       	sbrc	r2, 3
 900:	19 c0       	rjmp	.+50     	; 0x934 <vfprintf+0x1c8>
 902:	83 2d       	mov	r24, r3
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	48 16       	cp	r4, r24
 908:	59 06       	cpc	r5, r25
 90a:	a0 f4       	brcc	.+40     	; 0x934 <vfprintf+0x1c8>
 90c:	b7 01       	movw	r22, r14
 90e:	80 e2       	ldi	r24, 0x20	; 32
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	78 d2       	rcall	.+1264   	; 0xe04 <fputc>
 914:	3a 94       	dec	r3
 916:	f5 cf       	rjmp	.-22     	; 0x902 <vfprintf+0x196>
 918:	f5 01       	movw	r30, r10
 91a:	27 fc       	sbrc	r2, 7
 91c:	85 91       	lpm	r24, Z+
 91e:	27 fe       	sbrs	r2, 7
 920:	81 91       	ld	r24, Z+
 922:	5f 01       	movw	r10, r30
 924:	b7 01       	movw	r22, r14
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	6d d2       	rcall	.+1242   	; 0xe04 <fputc>
 92a:	31 10       	cpse	r3, r1
 92c:	3a 94       	dec	r3
 92e:	f1 e0       	ldi	r31, 0x01	; 1
 930:	4f 1a       	sub	r4, r31
 932:	51 08       	sbc	r5, r1
 934:	41 14       	cp	r4, r1
 936:	51 04       	cpc	r5, r1
 938:	79 f7       	brne	.-34     	; 0x918 <vfprintf+0x1ac>
 93a:	de c0       	rjmp	.+444    	; 0xaf8 <vfprintf+0x38c>
 93c:	84 36       	cpi	r24, 0x64	; 100
 93e:	11 f0       	breq	.+4      	; 0x944 <vfprintf+0x1d8>
 940:	89 36       	cpi	r24, 0x69	; 105
 942:	31 f5       	brne	.+76     	; 0x990 <vfprintf+0x224>
 944:	f8 01       	movw	r30, r16
 946:	27 ff       	sbrs	r18, 7
 948:	07 c0       	rjmp	.+14     	; 0x958 <vfprintf+0x1ec>
 94a:	60 81       	ld	r22, Z
 94c:	71 81       	ldd	r23, Z+1	; 0x01
 94e:	82 81       	ldd	r24, Z+2	; 0x02
 950:	93 81       	ldd	r25, Z+3	; 0x03
 952:	0c 5f       	subi	r16, 0xFC	; 252
 954:	1f 4f       	sbci	r17, 0xFF	; 255
 956:	08 c0       	rjmp	.+16     	; 0x968 <vfprintf+0x1fc>
 958:	60 81       	ld	r22, Z
 95a:	71 81       	ldd	r23, Z+1	; 0x01
 95c:	88 27       	eor	r24, r24
 95e:	77 fd       	sbrc	r23, 7
 960:	80 95       	com	r24
 962:	98 2f       	mov	r25, r24
 964:	0e 5f       	subi	r16, 0xFE	; 254
 966:	1f 4f       	sbci	r17, 0xFF	; 255
 968:	2f 76       	andi	r18, 0x6F	; 111
 96a:	b2 2e       	mov	r11, r18
 96c:	97 ff       	sbrs	r25, 7
 96e:	09 c0       	rjmp	.+18     	; 0x982 <vfprintf+0x216>
 970:	90 95       	com	r25
 972:	80 95       	com	r24
 974:	70 95       	com	r23
 976:	61 95       	neg	r22
 978:	7f 4f       	sbci	r23, 0xFF	; 255
 97a:	8f 4f       	sbci	r24, 0xFF	; 255
 97c:	9f 4f       	sbci	r25, 0xFF	; 255
 97e:	20 68       	ori	r18, 0x80	; 128
 980:	b2 2e       	mov	r11, r18
 982:	2a e0       	ldi	r18, 0x0A	; 10
 984:	30 e0       	ldi	r19, 0x00	; 0
 986:	a4 01       	movw	r20, r8
 988:	6f d2       	rcall	.+1246   	; 0xe68 <__ultoa_invert>
 98a:	a8 2e       	mov	r10, r24
 98c:	a8 18       	sub	r10, r8
 98e:	43 c0       	rjmp	.+134    	; 0xa16 <vfprintf+0x2aa>
 990:	85 37       	cpi	r24, 0x75	; 117
 992:	29 f4       	brne	.+10     	; 0x99e <vfprintf+0x232>
 994:	2f 7e       	andi	r18, 0xEF	; 239
 996:	b2 2e       	mov	r11, r18
 998:	2a e0       	ldi	r18, 0x0A	; 10
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	25 c0       	rjmp	.+74     	; 0x9e8 <vfprintf+0x27c>
 99e:	f2 2f       	mov	r31, r18
 9a0:	f9 7f       	andi	r31, 0xF9	; 249
 9a2:	bf 2e       	mov	r11, r31
 9a4:	8f 36       	cpi	r24, 0x6F	; 111
 9a6:	c1 f0       	breq	.+48     	; 0x9d8 <vfprintf+0x26c>
 9a8:	18 f4       	brcc	.+6      	; 0x9b0 <vfprintf+0x244>
 9aa:	88 35       	cpi	r24, 0x58	; 88
 9ac:	79 f0       	breq	.+30     	; 0x9cc <vfprintf+0x260>
 9ae:	ad c0       	rjmp	.+346    	; 0xb0a <vfprintf+0x39e>
 9b0:	80 37       	cpi	r24, 0x70	; 112
 9b2:	19 f0       	breq	.+6      	; 0x9ba <vfprintf+0x24e>
 9b4:	88 37       	cpi	r24, 0x78	; 120
 9b6:	21 f0       	breq	.+8      	; 0x9c0 <vfprintf+0x254>
 9b8:	a8 c0       	rjmp	.+336    	; 0xb0a <vfprintf+0x39e>
 9ba:	2f 2f       	mov	r18, r31
 9bc:	20 61       	ori	r18, 0x10	; 16
 9be:	b2 2e       	mov	r11, r18
 9c0:	b4 fe       	sbrs	r11, 4
 9c2:	0d c0       	rjmp	.+26     	; 0x9de <vfprintf+0x272>
 9c4:	8b 2d       	mov	r24, r11
 9c6:	84 60       	ori	r24, 0x04	; 4
 9c8:	b8 2e       	mov	r11, r24
 9ca:	09 c0       	rjmp	.+18     	; 0x9de <vfprintf+0x272>
 9cc:	24 ff       	sbrs	r18, 4
 9ce:	0a c0       	rjmp	.+20     	; 0x9e4 <vfprintf+0x278>
 9d0:	9f 2f       	mov	r25, r31
 9d2:	96 60       	ori	r25, 0x06	; 6
 9d4:	b9 2e       	mov	r11, r25
 9d6:	06 c0       	rjmp	.+12     	; 0x9e4 <vfprintf+0x278>
 9d8:	28 e0       	ldi	r18, 0x08	; 8
 9da:	30 e0       	ldi	r19, 0x00	; 0
 9dc:	05 c0       	rjmp	.+10     	; 0x9e8 <vfprintf+0x27c>
 9de:	20 e1       	ldi	r18, 0x10	; 16
 9e0:	30 e0       	ldi	r19, 0x00	; 0
 9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <vfprintf+0x27c>
 9e4:	20 e1       	ldi	r18, 0x10	; 16
 9e6:	32 e0       	ldi	r19, 0x02	; 2
 9e8:	f8 01       	movw	r30, r16
 9ea:	b7 fe       	sbrs	r11, 7
 9ec:	07 c0       	rjmp	.+14     	; 0x9fc <vfprintf+0x290>
 9ee:	60 81       	ld	r22, Z
 9f0:	71 81       	ldd	r23, Z+1	; 0x01
 9f2:	82 81       	ldd	r24, Z+2	; 0x02
 9f4:	93 81       	ldd	r25, Z+3	; 0x03
 9f6:	0c 5f       	subi	r16, 0xFC	; 252
 9f8:	1f 4f       	sbci	r17, 0xFF	; 255
 9fa:	06 c0       	rjmp	.+12     	; 0xa08 <vfprintf+0x29c>
 9fc:	60 81       	ld	r22, Z
 9fe:	71 81       	ldd	r23, Z+1	; 0x01
 a00:	80 e0       	ldi	r24, 0x00	; 0
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	0e 5f       	subi	r16, 0xFE	; 254
 a06:	1f 4f       	sbci	r17, 0xFF	; 255
 a08:	a4 01       	movw	r20, r8
 a0a:	2e d2       	rcall	.+1116   	; 0xe68 <__ultoa_invert>
 a0c:	a8 2e       	mov	r10, r24
 a0e:	a8 18       	sub	r10, r8
 a10:	fb 2d       	mov	r31, r11
 a12:	ff 77       	andi	r31, 0x7F	; 127
 a14:	bf 2e       	mov	r11, r31
 a16:	b6 fe       	sbrs	r11, 6
 a18:	0b c0       	rjmp	.+22     	; 0xa30 <vfprintf+0x2c4>
 a1a:	2b 2d       	mov	r18, r11
 a1c:	2e 7f       	andi	r18, 0xFE	; 254
 a1e:	a5 14       	cp	r10, r5
 a20:	50 f4       	brcc	.+20     	; 0xa36 <vfprintf+0x2ca>
 a22:	b4 fe       	sbrs	r11, 4
 a24:	0a c0       	rjmp	.+20     	; 0xa3a <vfprintf+0x2ce>
 a26:	b2 fc       	sbrc	r11, 2
 a28:	08 c0       	rjmp	.+16     	; 0xa3a <vfprintf+0x2ce>
 a2a:	2b 2d       	mov	r18, r11
 a2c:	2e 7e       	andi	r18, 0xEE	; 238
 a2e:	05 c0       	rjmp	.+10     	; 0xa3a <vfprintf+0x2ce>
 a30:	7a 2c       	mov	r7, r10
 a32:	2b 2d       	mov	r18, r11
 a34:	03 c0       	rjmp	.+6      	; 0xa3c <vfprintf+0x2d0>
 a36:	7a 2c       	mov	r7, r10
 a38:	01 c0       	rjmp	.+2      	; 0xa3c <vfprintf+0x2d0>
 a3a:	75 2c       	mov	r7, r5
 a3c:	24 ff       	sbrs	r18, 4
 a3e:	0d c0       	rjmp	.+26     	; 0xa5a <vfprintf+0x2ee>
 a40:	fe 01       	movw	r30, r28
 a42:	ea 0d       	add	r30, r10
 a44:	f1 1d       	adc	r31, r1
 a46:	80 81       	ld	r24, Z
 a48:	80 33       	cpi	r24, 0x30	; 48
 a4a:	11 f4       	brne	.+4      	; 0xa50 <vfprintf+0x2e4>
 a4c:	29 7e       	andi	r18, 0xE9	; 233
 a4e:	09 c0       	rjmp	.+18     	; 0xa62 <vfprintf+0x2f6>
 a50:	22 ff       	sbrs	r18, 2
 a52:	06 c0       	rjmp	.+12     	; 0xa60 <vfprintf+0x2f4>
 a54:	73 94       	inc	r7
 a56:	73 94       	inc	r7
 a58:	04 c0       	rjmp	.+8      	; 0xa62 <vfprintf+0x2f6>
 a5a:	82 2f       	mov	r24, r18
 a5c:	86 78       	andi	r24, 0x86	; 134
 a5e:	09 f0       	breq	.+2      	; 0xa62 <vfprintf+0x2f6>
 a60:	73 94       	inc	r7
 a62:	23 fd       	sbrc	r18, 3
 a64:	12 c0       	rjmp	.+36     	; 0xa8a <vfprintf+0x31e>
 a66:	20 ff       	sbrs	r18, 0
 a68:	06 c0       	rjmp	.+12     	; 0xa76 <vfprintf+0x30a>
 a6a:	5a 2c       	mov	r5, r10
 a6c:	73 14       	cp	r7, r3
 a6e:	18 f4       	brcc	.+6      	; 0xa76 <vfprintf+0x30a>
 a70:	53 0c       	add	r5, r3
 a72:	57 18       	sub	r5, r7
 a74:	73 2c       	mov	r7, r3
 a76:	73 14       	cp	r7, r3
 a78:	60 f4       	brcc	.+24     	; 0xa92 <vfprintf+0x326>
 a7a:	b7 01       	movw	r22, r14
 a7c:	80 e2       	ldi	r24, 0x20	; 32
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	2c 87       	std	Y+12, r18	; 0x0c
 a82:	c0 d1       	rcall	.+896    	; 0xe04 <fputc>
 a84:	73 94       	inc	r7
 a86:	2c 85       	ldd	r18, Y+12	; 0x0c
 a88:	f6 cf       	rjmp	.-20     	; 0xa76 <vfprintf+0x30a>
 a8a:	73 14       	cp	r7, r3
 a8c:	10 f4       	brcc	.+4      	; 0xa92 <vfprintf+0x326>
 a8e:	37 18       	sub	r3, r7
 a90:	01 c0       	rjmp	.+2      	; 0xa94 <vfprintf+0x328>
 a92:	31 2c       	mov	r3, r1
 a94:	24 ff       	sbrs	r18, 4
 a96:	11 c0       	rjmp	.+34     	; 0xaba <vfprintf+0x34e>
 a98:	b7 01       	movw	r22, r14
 a9a:	80 e3       	ldi	r24, 0x30	; 48
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	2c 87       	std	Y+12, r18	; 0x0c
 aa0:	b1 d1       	rcall	.+866    	; 0xe04 <fputc>
 aa2:	2c 85       	ldd	r18, Y+12	; 0x0c
 aa4:	22 ff       	sbrs	r18, 2
 aa6:	16 c0       	rjmp	.+44     	; 0xad4 <vfprintf+0x368>
 aa8:	21 ff       	sbrs	r18, 1
 aaa:	03 c0       	rjmp	.+6      	; 0xab2 <vfprintf+0x346>
 aac:	88 e5       	ldi	r24, 0x58	; 88
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	02 c0       	rjmp	.+4      	; 0xab6 <vfprintf+0x34a>
 ab2:	88 e7       	ldi	r24, 0x78	; 120
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	b7 01       	movw	r22, r14
 ab8:	0c c0       	rjmp	.+24     	; 0xad2 <vfprintf+0x366>
 aba:	82 2f       	mov	r24, r18
 abc:	86 78       	andi	r24, 0x86	; 134
 abe:	51 f0       	breq	.+20     	; 0xad4 <vfprintf+0x368>
 ac0:	21 fd       	sbrc	r18, 1
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <vfprintf+0x35c>
 ac4:	80 e2       	ldi	r24, 0x20	; 32
 ac6:	01 c0       	rjmp	.+2      	; 0xaca <vfprintf+0x35e>
 ac8:	8b e2       	ldi	r24, 0x2B	; 43
 aca:	27 fd       	sbrc	r18, 7
 acc:	8d e2       	ldi	r24, 0x2D	; 45
 ace:	b7 01       	movw	r22, r14
 ad0:	90 e0       	ldi	r25, 0x00	; 0
 ad2:	98 d1       	rcall	.+816    	; 0xe04 <fputc>
 ad4:	a5 14       	cp	r10, r5
 ad6:	30 f4       	brcc	.+12     	; 0xae4 <vfprintf+0x378>
 ad8:	b7 01       	movw	r22, r14
 ada:	80 e3       	ldi	r24, 0x30	; 48
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	92 d1       	rcall	.+804    	; 0xe04 <fputc>
 ae0:	5a 94       	dec	r5
 ae2:	f8 cf       	rjmp	.-16     	; 0xad4 <vfprintf+0x368>
 ae4:	aa 94       	dec	r10
 ae6:	f4 01       	movw	r30, r8
 ae8:	ea 0d       	add	r30, r10
 aea:	f1 1d       	adc	r31, r1
 aec:	80 81       	ld	r24, Z
 aee:	b7 01       	movw	r22, r14
 af0:	90 e0       	ldi	r25, 0x00	; 0
 af2:	88 d1       	rcall	.+784    	; 0xe04 <fputc>
 af4:	a1 10       	cpse	r10, r1
 af6:	f6 cf       	rjmp	.-20     	; 0xae4 <vfprintf+0x378>
 af8:	33 20       	and	r3, r3
 afa:	09 f4       	brne	.+2      	; 0xafe <vfprintf+0x392>
 afc:	5d ce       	rjmp	.-838    	; 0x7b8 <vfprintf+0x4c>
 afe:	b7 01       	movw	r22, r14
 b00:	80 e2       	ldi	r24, 0x20	; 32
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	7f d1       	rcall	.+766    	; 0xe04 <fputc>
 b06:	3a 94       	dec	r3
 b08:	f7 cf       	rjmp	.-18     	; 0xaf8 <vfprintf+0x38c>
 b0a:	f7 01       	movw	r30, r14
 b0c:	86 81       	ldd	r24, Z+6	; 0x06
 b0e:	97 81       	ldd	r25, Z+7	; 0x07
 b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0x3aa>
 b12:	8f ef       	ldi	r24, 0xFF	; 255
 b14:	9f ef       	ldi	r25, 0xFF	; 255
 b16:	2c 96       	adiw	r28, 0x0c	; 12
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	f8 94       	cli
 b1c:	de bf       	out	0x3e, r29	; 62
 b1e:	0f be       	out	0x3f, r0	; 63
 b20:	cd bf       	out	0x3d, r28	; 61
 b22:	df 91       	pop	r29
 b24:	cf 91       	pop	r28
 b26:	1f 91       	pop	r17
 b28:	0f 91       	pop	r16
 b2a:	ff 90       	pop	r15
 b2c:	ef 90       	pop	r14
 b2e:	df 90       	pop	r13
 b30:	cf 90       	pop	r12
 b32:	bf 90       	pop	r11
 b34:	af 90       	pop	r10
 b36:	9f 90       	pop	r9
 b38:	8f 90       	pop	r8
 b3a:	7f 90       	pop	r7
 b3c:	6f 90       	pop	r6
 b3e:	5f 90       	pop	r5
 b40:	4f 90       	pop	r4
 b42:	3f 90       	pop	r3
 b44:	2f 90       	pop	r2
 b46:	08 95       	ret

00000b48 <calloc>:
 b48:	0f 93       	push	r16
 b4a:	1f 93       	push	r17
 b4c:	cf 93       	push	r28
 b4e:	df 93       	push	r29
 b50:	86 9f       	mul	r24, r22
 b52:	80 01       	movw	r16, r0
 b54:	87 9f       	mul	r24, r23
 b56:	10 0d       	add	r17, r0
 b58:	96 9f       	mul	r25, r22
 b5a:	10 0d       	add	r17, r0
 b5c:	11 24       	eor	r1, r1
 b5e:	c8 01       	movw	r24, r16
 b60:	0d d0       	rcall	.+26     	; 0xb7c <malloc>
 b62:	ec 01       	movw	r28, r24
 b64:	00 97       	sbiw	r24, 0x00	; 0
 b66:	21 f0       	breq	.+8      	; 0xb70 <calloc+0x28>
 b68:	a8 01       	movw	r20, r16
 b6a:	60 e0       	ldi	r22, 0x00	; 0
 b6c:	70 e0       	ldi	r23, 0x00	; 0
 b6e:	38 d1       	rcall	.+624    	; 0xde0 <memset>
 b70:	ce 01       	movw	r24, r28
 b72:	df 91       	pop	r29
 b74:	cf 91       	pop	r28
 b76:	1f 91       	pop	r17
 b78:	0f 91       	pop	r16
 b7a:	08 95       	ret

00000b7c <malloc>:
 b7c:	cf 93       	push	r28
 b7e:	df 93       	push	r29
 b80:	82 30       	cpi	r24, 0x02	; 2
 b82:	91 05       	cpc	r25, r1
 b84:	10 f4       	brcc	.+4      	; 0xb8a <malloc+0xe>
 b86:	82 e0       	ldi	r24, 0x02	; 2
 b88:	90 e0       	ldi	r25, 0x00	; 0
 b8a:	e0 91 02 03 	lds	r30, 0x0302
 b8e:	f0 91 03 03 	lds	r31, 0x0303
 b92:	20 e0       	ldi	r18, 0x00	; 0
 b94:	30 e0       	ldi	r19, 0x00	; 0
 b96:	a0 e0       	ldi	r26, 0x00	; 0
 b98:	b0 e0       	ldi	r27, 0x00	; 0
 b9a:	30 97       	sbiw	r30, 0x00	; 0
 b9c:	39 f1       	breq	.+78     	; 0xbec <malloc+0x70>
 b9e:	40 81       	ld	r20, Z
 ba0:	51 81       	ldd	r21, Z+1	; 0x01
 ba2:	48 17       	cp	r20, r24
 ba4:	59 07       	cpc	r21, r25
 ba6:	b8 f0       	brcs	.+46     	; 0xbd6 <malloc+0x5a>
 ba8:	48 17       	cp	r20, r24
 baa:	59 07       	cpc	r21, r25
 bac:	71 f4       	brne	.+28     	; 0xbca <malloc+0x4e>
 bae:	82 81       	ldd	r24, Z+2	; 0x02
 bb0:	93 81       	ldd	r25, Z+3	; 0x03
 bb2:	10 97       	sbiw	r26, 0x00	; 0
 bb4:	29 f0       	breq	.+10     	; 0xbc0 <malloc+0x44>
 bb6:	13 96       	adiw	r26, 0x03	; 3
 bb8:	9c 93       	st	X, r25
 bba:	8e 93       	st	-X, r24
 bbc:	12 97       	sbiw	r26, 0x02	; 2
 bbe:	2c c0       	rjmp	.+88     	; 0xc18 <malloc+0x9c>
 bc0:	90 93 03 03 	sts	0x0303, r25
 bc4:	80 93 02 03 	sts	0x0302, r24
 bc8:	27 c0       	rjmp	.+78     	; 0xc18 <malloc+0x9c>
 bca:	21 15       	cp	r18, r1
 bcc:	31 05       	cpc	r19, r1
 bce:	31 f0       	breq	.+12     	; 0xbdc <malloc+0x60>
 bd0:	42 17       	cp	r20, r18
 bd2:	53 07       	cpc	r21, r19
 bd4:	18 f0       	brcs	.+6      	; 0xbdc <malloc+0x60>
 bd6:	a9 01       	movw	r20, r18
 bd8:	db 01       	movw	r26, r22
 bda:	01 c0       	rjmp	.+2      	; 0xbde <malloc+0x62>
 bdc:	ef 01       	movw	r28, r30
 bde:	9a 01       	movw	r18, r20
 be0:	bd 01       	movw	r22, r26
 be2:	df 01       	movw	r26, r30
 be4:	02 80       	ldd	r0, Z+2	; 0x02
 be6:	f3 81       	ldd	r31, Z+3	; 0x03
 be8:	e0 2d       	mov	r30, r0
 bea:	d7 cf       	rjmp	.-82     	; 0xb9a <malloc+0x1e>
 bec:	21 15       	cp	r18, r1
 bee:	31 05       	cpc	r19, r1
 bf0:	f9 f0       	breq	.+62     	; 0xc30 <malloc+0xb4>
 bf2:	28 1b       	sub	r18, r24
 bf4:	39 0b       	sbc	r19, r25
 bf6:	24 30       	cpi	r18, 0x04	; 4
 bf8:	31 05       	cpc	r19, r1
 bfa:	80 f4       	brcc	.+32     	; 0xc1c <malloc+0xa0>
 bfc:	8a 81       	ldd	r24, Y+2	; 0x02
 bfe:	9b 81       	ldd	r25, Y+3	; 0x03
 c00:	61 15       	cp	r22, r1
 c02:	71 05       	cpc	r23, r1
 c04:	21 f0       	breq	.+8      	; 0xc0e <malloc+0x92>
 c06:	fb 01       	movw	r30, r22
 c08:	93 83       	std	Z+3, r25	; 0x03
 c0a:	82 83       	std	Z+2, r24	; 0x02
 c0c:	04 c0       	rjmp	.+8      	; 0xc16 <malloc+0x9a>
 c0e:	90 93 03 03 	sts	0x0303, r25
 c12:	80 93 02 03 	sts	0x0302, r24
 c16:	fe 01       	movw	r30, r28
 c18:	32 96       	adiw	r30, 0x02	; 2
 c1a:	44 c0       	rjmp	.+136    	; 0xca4 <malloc+0x128>
 c1c:	fe 01       	movw	r30, r28
 c1e:	e2 0f       	add	r30, r18
 c20:	f3 1f       	adc	r31, r19
 c22:	81 93       	st	Z+, r24
 c24:	91 93       	st	Z+, r25
 c26:	22 50       	subi	r18, 0x02	; 2
 c28:	31 09       	sbc	r19, r1
 c2a:	39 83       	std	Y+1, r19	; 0x01
 c2c:	28 83       	st	Y, r18
 c2e:	3a c0       	rjmp	.+116    	; 0xca4 <malloc+0x128>
 c30:	20 91 00 03 	lds	r18, 0x0300
 c34:	30 91 01 03 	lds	r19, 0x0301
 c38:	23 2b       	or	r18, r19
 c3a:	41 f4       	brne	.+16     	; 0xc4c <malloc+0xd0>
 c3c:	20 91 02 02 	lds	r18, 0x0202
 c40:	30 91 03 02 	lds	r19, 0x0203
 c44:	30 93 01 03 	sts	0x0301, r19
 c48:	20 93 00 03 	sts	0x0300, r18
 c4c:	20 91 00 02 	lds	r18, 0x0200
 c50:	30 91 01 02 	lds	r19, 0x0201
 c54:	21 15       	cp	r18, r1
 c56:	31 05       	cpc	r19, r1
 c58:	41 f4       	brne	.+16     	; 0xc6a <malloc+0xee>
 c5a:	2d b7       	in	r18, 0x3d	; 61
 c5c:	3e b7       	in	r19, 0x3e	; 62
 c5e:	40 91 04 02 	lds	r20, 0x0204
 c62:	50 91 05 02 	lds	r21, 0x0205
 c66:	24 1b       	sub	r18, r20
 c68:	35 0b       	sbc	r19, r21
 c6a:	e0 91 00 03 	lds	r30, 0x0300
 c6e:	f0 91 01 03 	lds	r31, 0x0301
 c72:	e2 17       	cp	r30, r18
 c74:	f3 07       	cpc	r31, r19
 c76:	a0 f4       	brcc	.+40     	; 0xca0 <malloc+0x124>
 c78:	2e 1b       	sub	r18, r30
 c7a:	3f 0b       	sbc	r19, r31
 c7c:	28 17       	cp	r18, r24
 c7e:	39 07       	cpc	r19, r25
 c80:	78 f0       	brcs	.+30     	; 0xca0 <malloc+0x124>
 c82:	ac 01       	movw	r20, r24
 c84:	4e 5f       	subi	r20, 0xFE	; 254
 c86:	5f 4f       	sbci	r21, 0xFF	; 255
 c88:	24 17       	cp	r18, r20
 c8a:	35 07       	cpc	r19, r21
 c8c:	48 f0       	brcs	.+18     	; 0xca0 <malloc+0x124>
 c8e:	4e 0f       	add	r20, r30
 c90:	5f 1f       	adc	r21, r31
 c92:	50 93 01 03 	sts	0x0301, r21
 c96:	40 93 00 03 	sts	0x0300, r20
 c9a:	81 93       	st	Z+, r24
 c9c:	91 93       	st	Z+, r25
 c9e:	02 c0       	rjmp	.+4      	; 0xca4 <malloc+0x128>
 ca0:	e0 e0       	ldi	r30, 0x00	; 0
 ca2:	f0 e0       	ldi	r31, 0x00	; 0
 ca4:	cf 01       	movw	r24, r30
 ca6:	df 91       	pop	r29
 ca8:	cf 91       	pop	r28
 caa:	08 95       	ret

00000cac <free>:
 cac:	cf 93       	push	r28
 cae:	df 93       	push	r29
 cb0:	00 97       	sbiw	r24, 0x00	; 0
 cb2:	09 f4       	brne	.+2      	; 0xcb6 <free+0xa>
 cb4:	87 c0       	rjmp	.+270    	; 0xdc4 <free+0x118>
 cb6:	fc 01       	movw	r30, r24
 cb8:	32 97       	sbiw	r30, 0x02	; 2
 cba:	13 82       	std	Z+3, r1	; 0x03
 cbc:	12 82       	std	Z+2, r1	; 0x02
 cbe:	c0 91 02 03 	lds	r28, 0x0302
 cc2:	d0 91 03 03 	lds	r29, 0x0303
 cc6:	20 97       	sbiw	r28, 0x00	; 0
 cc8:	81 f4       	brne	.+32     	; 0xcea <free+0x3e>
 cca:	20 81       	ld	r18, Z
 ccc:	31 81       	ldd	r19, Z+1	; 0x01
 cce:	28 0f       	add	r18, r24
 cd0:	39 1f       	adc	r19, r25
 cd2:	80 91 00 03 	lds	r24, 0x0300
 cd6:	90 91 01 03 	lds	r25, 0x0301
 cda:	82 17       	cp	r24, r18
 cdc:	93 07       	cpc	r25, r19
 cde:	79 f5       	brne	.+94     	; 0xd3e <free+0x92>
 ce0:	f0 93 01 03 	sts	0x0301, r31
 ce4:	e0 93 00 03 	sts	0x0300, r30
 ce8:	6d c0       	rjmp	.+218    	; 0xdc4 <free+0x118>
 cea:	de 01       	movw	r26, r28
 cec:	20 e0       	ldi	r18, 0x00	; 0
 cee:	30 e0       	ldi	r19, 0x00	; 0
 cf0:	ae 17       	cp	r26, r30
 cf2:	bf 07       	cpc	r27, r31
 cf4:	50 f4       	brcc	.+20     	; 0xd0a <free+0x5e>
 cf6:	12 96       	adiw	r26, 0x02	; 2
 cf8:	4d 91       	ld	r20, X+
 cfa:	5c 91       	ld	r21, X
 cfc:	13 97       	sbiw	r26, 0x03	; 3
 cfe:	9d 01       	movw	r18, r26
 d00:	41 15       	cp	r20, r1
 d02:	51 05       	cpc	r21, r1
 d04:	09 f1       	breq	.+66     	; 0xd48 <free+0x9c>
 d06:	da 01       	movw	r26, r20
 d08:	f3 cf       	rjmp	.-26     	; 0xcf0 <free+0x44>
 d0a:	b3 83       	std	Z+3, r27	; 0x03
 d0c:	a2 83       	std	Z+2, r26	; 0x02
 d0e:	40 81       	ld	r20, Z
 d10:	51 81       	ldd	r21, Z+1	; 0x01
 d12:	84 0f       	add	r24, r20
 d14:	95 1f       	adc	r25, r21
 d16:	8a 17       	cp	r24, r26
 d18:	9b 07       	cpc	r25, r27
 d1a:	71 f4       	brne	.+28     	; 0xd38 <free+0x8c>
 d1c:	8d 91       	ld	r24, X+
 d1e:	9c 91       	ld	r25, X
 d20:	11 97       	sbiw	r26, 0x01	; 1
 d22:	84 0f       	add	r24, r20
 d24:	95 1f       	adc	r25, r21
 d26:	02 96       	adiw	r24, 0x02	; 2
 d28:	91 83       	std	Z+1, r25	; 0x01
 d2a:	80 83       	st	Z, r24
 d2c:	12 96       	adiw	r26, 0x02	; 2
 d2e:	8d 91       	ld	r24, X+
 d30:	9c 91       	ld	r25, X
 d32:	13 97       	sbiw	r26, 0x03	; 3
 d34:	93 83       	std	Z+3, r25	; 0x03
 d36:	82 83       	std	Z+2, r24	; 0x02
 d38:	21 15       	cp	r18, r1
 d3a:	31 05       	cpc	r19, r1
 d3c:	29 f4       	brne	.+10     	; 0xd48 <free+0x9c>
 d3e:	f0 93 03 03 	sts	0x0303, r31
 d42:	e0 93 02 03 	sts	0x0302, r30
 d46:	3e c0       	rjmp	.+124    	; 0xdc4 <free+0x118>
 d48:	d9 01       	movw	r26, r18
 d4a:	13 96       	adiw	r26, 0x03	; 3
 d4c:	fc 93       	st	X, r31
 d4e:	ee 93       	st	-X, r30
 d50:	12 97       	sbiw	r26, 0x02	; 2
 d52:	4d 91       	ld	r20, X+
 d54:	5d 91       	ld	r21, X+
 d56:	a4 0f       	add	r26, r20
 d58:	b5 1f       	adc	r27, r21
 d5a:	ea 17       	cp	r30, r26
 d5c:	fb 07       	cpc	r31, r27
 d5e:	79 f4       	brne	.+30     	; 0xd7e <free+0xd2>
 d60:	80 81       	ld	r24, Z
 d62:	91 81       	ldd	r25, Z+1	; 0x01
 d64:	84 0f       	add	r24, r20
 d66:	95 1f       	adc	r25, r21
 d68:	02 96       	adiw	r24, 0x02	; 2
 d6a:	d9 01       	movw	r26, r18
 d6c:	11 96       	adiw	r26, 0x01	; 1
 d6e:	9c 93       	st	X, r25
 d70:	8e 93       	st	-X, r24
 d72:	82 81       	ldd	r24, Z+2	; 0x02
 d74:	93 81       	ldd	r25, Z+3	; 0x03
 d76:	13 96       	adiw	r26, 0x03	; 3
 d78:	9c 93       	st	X, r25
 d7a:	8e 93       	st	-X, r24
 d7c:	12 97       	sbiw	r26, 0x02	; 2
 d7e:	e0 e0       	ldi	r30, 0x00	; 0
 d80:	f0 e0       	ldi	r31, 0x00	; 0
 d82:	8a 81       	ldd	r24, Y+2	; 0x02
 d84:	9b 81       	ldd	r25, Y+3	; 0x03
 d86:	00 97       	sbiw	r24, 0x00	; 0
 d88:	19 f0       	breq	.+6      	; 0xd90 <free+0xe4>
 d8a:	fe 01       	movw	r30, r28
 d8c:	ec 01       	movw	r28, r24
 d8e:	f9 cf       	rjmp	.-14     	; 0xd82 <free+0xd6>
 d90:	ce 01       	movw	r24, r28
 d92:	02 96       	adiw	r24, 0x02	; 2
 d94:	28 81       	ld	r18, Y
 d96:	39 81       	ldd	r19, Y+1	; 0x01
 d98:	82 0f       	add	r24, r18
 d9a:	93 1f       	adc	r25, r19
 d9c:	20 91 00 03 	lds	r18, 0x0300
 da0:	30 91 01 03 	lds	r19, 0x0301
 da4:	28 17       	cp	r18, r24
 da6:	39 07       	cpc	r19, r25
 da8:	69 f4       	brne	.+26     	; 0xdc4 <free+0x118>
 daa:	30 97       	sbiw	r30, 0x00	; 0
 dac:	29 f4       	brne	.+10     	; 0xdb8 <free+0x10c>
 dae:	10 92 03 03 	sts	0x0303, r1
 db2:	10 92 02 03 	sts	0x0302, r1
 db6:	02 c0       	rjmp	.+4      	; 0xdbc <free+0x110>
 db8:	13 82       	std	Z+3, r1	; 0x03
 dba:	12 82       	std	Z+2, r1	; 0x02
 dbc:	d0 93 01 03 	sts	0x0301, r29
 dc0:	c0 93 00 03 	sts	0x0300, r28
 dc4:	df 91       	pop	r29
 dc6:	cf 91       	pop	r28
 dc8:	08 95       	ret

00000dca <strnlen_P>:
 dca:	fc 01       	movw	r30, r24
 dcc:	05 90       	lpm	r0, Z+
 dce:	61 50       	subi	r22, 0x01	; 1
 dd0:	70 40       	sbci	r23, 0x00	; 0
 dd2:	01 10       	cpse	r0, r1
 dd4:	d8 f7       	brcc	.-10     	; 0xdcc <strnlen_P+0x2>
 dd6:	80 95       	com	r24
 dd8:	90 95       	com	r25
 dda:	8e 0f       	add	r24, r30
 ddc:	9f 1f       	adc	r25, r31
 dde:	08 95       	ret

00000de0 <memset>:
 de0:	dc 01       	movw	r26, r24
 de2:	01 c0       	rjmp	.+2      	; 0xde6 <memset+0x6>
 de4:	6d 93       	st	X+, r22
 de6:	41 50       	subi	r20, 0x01	; 1
 de8:	50 40       	sbci	r21, 0x00	; 0
 dea:	e0 f7       	brcc	.-8      	; 0xde4 <memset+0x4>
 dec:	08 95       	ret

00000dee <strnlen>:
 dee:	fc 01       	movw	r30, r24
 df0:	61 50       	subi	r22, 0x01	; 1
 df2:	70 40       	sbci	r23, 0x00	; 0
 df4:	01 90       	ld	r0, Z+
 df6:	01 10       	cpse	r0, r1
 df8:	d8 f7       	brcc	.-10     	; 0xdf0 <strnlen+0x2>
 dfa:	80 95       	com	r24
 dfc:	90 95       	com	r25
 dfe:	8e 0f       	add	r24, r30
 e00:	9f 1f       	adc	r25, r31
 e02:	08 95       	ret

00000e04 <fputc>:
 e04:	0f 93       	push	r16
 e06:	1f 93       	push	r17
 e08:	cf 93       	push	r28
 e0a:	df 93       	push	r29
 e0c:	18 2f       	mov	r17, r24
 e0e:	09 2f       	mov	r16, r25
 e10:	eb 01       	movw	r28, r22
 e12:	8b 81       	ldd	r24, Y+3	; 0x03
 e14:	81 fd       	sbrc	r24, 1
 e16:	03 c0       	rjmp	.+6      	; 0xe1e <fputc+0x1a>
 e18:	8f ef       	ldi	r24, 0xFF	; 255
 e1a:	9f ef       	ldi	r25, 0xFF	; 255
 e1c:	20 c0       	rjmp	.+64     	; 0xe5e <fputc+0x5a>
 e1e:	82 ff       	sbrs	r24, 2
 e20:	10 c0       	rjmp	.+32     	; 0xe42 <fputc+0x3e>
 e22:	4e 81       	ldd	r20, Y+6	; 0x06
 e24:	5f 81       	ldd	r21, Y+7	; 0x07
 e26:	2c 81       	ldd	r18, Y+4	; 0x04
 e28:	3d 81       	ldd	r19, Y+5	; 0x05
 e2a:	42 17       	cp	r20, r18
 e2c:	53 07       	cpc	r21, r19
 e2e:	7c f4       	brge	.+30     	; 0xe4e <fputc+0x4a>
 e30:	e8 81       	ld	r30, Y
 e32:	f9 81       	ldd	r31, Y+1	; 0x01
 e34:	9f 01       	movw	r18, r30
 e36:	2f 5f       	subi	r18, 0xFF	; 255
 e38:	3f 4f       	sbci	r19, 0xFF	; 255
 e3a:	39 83       	std	Y+1, r19	; 0x01
 e3c:	28 83       	st	Y, r18
 e3e:	10 83       	st	Z, r17
 e40:	06 c0       	rjmp	.+12     	; 0xe4e <fputc+0x4a>
 e42:	e8 85       	ldd	r30, Y+8	; 0x08
 e44:	f9 85       	ldd	r31, Y+9	; 0x09
 e46:	81 2f       	mov	r24, r17
 e48:	19 95       	eicall
 e4a:	89 2b       	or	r24, r25
 e4c:	29 f7       	brne	.-54     	; 0xe18 <fputc+0x14>
 e4e:	2e 81       	ldd	r18, Y+6	; 0x06
 e50:	3f 81       	ldd	r19, Y+7	; 0x07
 e52:	2f 5f       	subi	r18, 0xFF	; 255
 e54:	3f 4f       	sbci	r19, 0xFF	; 255
 e56:	3f 83       	std	Y+7, r19	; 0x07
 e58:	2e 83       	std	Y+6, r18	; 0x06
 e5a:	81 2f       	mov	r24, r17
 e5c:	90 2f       	mov	r25, r16
 e5e:	df 91       	pop	r29
 e60:	cf 91       	pop	r28
 e62:	1f 91       	pop	r17
 e64:	0f 91       	pop	r16
 e66:	08 95       	ret

00000e68 <__ultoa_invert>:
 e68:	fa 01       	movw	r30, r20
 e6a:	aa 27       	eor	r26, r26
 e6c:	28 30       	cpi	r18, 0x08	; 8
 e6e:	51 f1       	breq	.+84     	; 0xec4 <__ultoa_invert+0x5c>
 e70:	20 31       	cpi	r18, 0x10	; 16
 e72:	81 f1       	breq	.+96     	; 0xed4 <__ultoa_invert+0x6c>
 e74:	e8 94       	clt
 e76:	6f 93       	push	r22
 e78:	6e 7f       	andi	r22, 0xFE	; 254
 e7a:	6e 5f       	subi	r22, 0xFE	; 254
 e7c:	7f 4f       	sbci	r23, 0xFF	; 255
 e7e:	8f 4f       	sbci	r24, 0xFF	; 255
 e80:	9f 4f       	sbci	r25, 0xFF	; 255
 e82:	af 4f       	sbci	r26, 0xFF	; 255
 e84:	b1 e0       	ldi	r27, 0x01	; 1
 e86:	3e d0       	rcall	.+124    	; 0xf04 <__ultoa_invert+0x9c>
 e88:	b4 e0       	ldi	r27, 0x04	; 4
 e8a:	3c d0       	rcall	.+120    	; 0xf04 <__ultoa_invert+0x9c>
 e8c:	67 0f       	add	r22, r23
 e8e:	78 1f       	adc	r23, r24
 e90:	89 1f       	adc	r24, r25
 e92:	9a 1f       	adc	r25, r26
 e94:	a1 1d       	adc	r26, r1
 e96:	68 0f       	add	r22, r24
 e98:	79 1f       	adc	r23, r25
 e9a:	8a 1f       	adc	r24, r26
 e9c:	91 1d       	adc	r25, r1
 e9e:	a1 1d       	adc	r26, r1
 ea0:	6a 0f       	add	r22, r26
 ea2:	71 1d       	adc	r23, r1
 ea4:	81 1d       	adc	r24, r1
 ea6:	91 1d       	adc	r25, r1
 ea8:	a1 1d       	adc	r26, r1
 eaa:	20 d0       	rcall	.+64     	; 0xeec <__ultoa_invert+0x84>
 eac:	09 f4       	brne	.+2      	; 0xeb0 <__ultoa_invert+0x48>
 eae:	68 94       	set
 eb0:	3f 91       	pop	r19
 eb2:	2a e0       	ldi	r18, 0x0A	; 10
 eb4:	26 9f       	mul	r18, r22
 eb6:	11 24       	eor	r1, r1
 eb8:	30 19       	sub	r19, r0
 eba:	30 5d       	subi	r19, 0xD0	; 208
 ebc:	31 93       	st	Z+, r19
 ebe:	de f6       	brtc	.-74     	; 0xe76 <__ultoa_invert+0xe>
 ec0:	cf 01       	movw	r24, r30
 ec2:	08 95       	ret
 ec4:	46 2f       	mov	r20, r22
 ec6:	47 70       	andi	r20, 0x07	; 7
 ec8:	40 5d       	subi	r20, 0xD0	; 208
 eca:	41 93       	st	Z+, r20
 ecc:	b3 e0       	ldi	r27, 0x03	; 3
 ece:	0f d0       	rcall	.+30     	; 0xeee <__ultoa_invert+0x86>
 ed0:	c9 f7       	brne	.-14     	; 0xec4 <__ultoa_invert+0x5c>
 ed2:	f6 cf       	rjmp	.-20     	; 0xec0 <__ultoa_invert+0x58>
 ed4:	46 2f       	mov	r20, r22
 ed6:	4f 70       	andi	r20, 0x0F	; 15
 ed8:	40 5d       	subi	r20, 0xD0	; 208
 eda:	4a 33       	cpi	r20, 0x3A	; 58
 edc:	18 f0       	brcs	.+6      	; 0xee4 <__ultoa_invert+0x7c>
 ede:	49 5d       	subi	r20, 0xD9	; 217
 ee0:	31 fd       	sbrc	r19, 1
 ee2:	40 52       	subi	r20, 0x20	; 32
 ee4:	41 93       	st	Z+, r20
 ee6:	02 d0       	rcall	.+4      	; 0xeec <__ultoa_invert+0x84>
 ee8:	a9 f7       	brne	.-22     	; 0xed4 <__ultoa_invert+0x6c>
 eea:	ea cf       	rjmp	.-44     	; 0xec0 <__ultoa_invert+0x58>
 eec:	b4 e0       	ldi	r27, 0x04	; 4
 eee:	a6 95       	lsr	r26
 ef0:	97 95       	ror	r25
 ef2:	87 95       	ror	r24
 ef4:	77 95       	ror	r23
 ef6:	67 95       	ror	r22
 ef8:	ba 95       	dec	r27
 efa:	c9 f7       	brne	.-14     	; 0xeee <__ultoa_invert+0x86>
 efc:	00 97       	sbiw	r24, 0x00	; 0
 efe:	61 05       	cpc	r22, r1
 f00:	71 05       	cpc	r23, r1
 f02:	08 95       	ret
 f04:	9b 01       	movw	r18, r22
 f06:	ac 01       	movw	r20, r24
 f08:	0a 2e       	mov	r0, r26
 f0a:	06 94       	lsr	r0
 f0c:	57 95       	ror	r21
 f0e:	47 95       	ror	r20
 f10:	37 95       	ror	r19
 f12:	27 95       	ror	r18
 f14:	ba 95       	dec	r27
 f16:	c9 f7       	brne	.-14     	; 0xf0a <__ultoa_invert+0xa2>
 f18:	62 0f       	add	r22, r18
 f1a:	73 1f       	adc	r23, r19
 f1c:	84 1f       	adc	r24, r20
 f1e:	95 1f       	adc	r25, r21
 f20:	a0 1d       	adc	r26, r0
 f22:	08 95       	ret

00000f24 <_exit>:
 f24:	f8 94       	cli

00000f26 <__stop_program>:
 f26:	ff cf       	rjmp	.-2      	; 0xf26 <__stop_program>
